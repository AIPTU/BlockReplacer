<?php

/*
 * Copyright (c) 2024 AIPTU
 *
 * For the full copyright and license information, please view
 * the LICENSE.md file that was distributed with this source code.
 *
 * @see https://github.com/AIPTU/libsounds
 */

declare(strict_types=1);

namespace aiptu\blockreplacer\libs\_d82fc3abef7c3055\aiptu\libsounds;

enum SoundTypes : string {
	case AMBIENT_BASALT_DELTAS_ADDITIONS = 'ambient.basalt_deltas.additions';
	case AMBIENT_BASALT_DELTAS_LOOP = 'ambient.basalt_deltas.loop';
	case AMBIENT_BASALT_DELTAS_MOOD = 'ambient.basalt_deltas.mood';
	case AMBIENT_CANDLE = 'ambient.candle';
	case AMBIENT_CAVE = 'ambient.cave';
	case AMBIENT_CRIMSON_FOREST_ADDITIONS = 'ambient.crimson_forest.additions';
	case AMBIENT_CRIMSON_FOREST_LOOP = 'ambient.crimson_forest.loop';
	case AMBIENT_CRIMSON_FOREST_MOOD = 'ambient.crimson_forest.mood';
	case AMBIENT_NETHER_WASTES_ADDITIONS = 'ambient.nether_wastes.additions';
	case AMBIENT_NETHER_WASTES_LOOP = 'ambient.nether_wastes.loop';
	case AMBIENT_NETHER_WASTES_MOOD = 'ambient.nether_wastes.mood';
	case AMBIENT_SOULSAND_VALLEY_ADDITIONS = 'ambient.soulsand_valley.additions';
	case AMBIENT_SOULSAND_VALLEY_LOOP = 'ambient.soulsand_valley.loop';
	case AMBIENT_SOULSAND_VALLEY_MOOD = 'ambient.soulsand_valley.mood';
	case AMBIENT_UNDERWATER_ENTER = 'ambient.underwater.enter';
	case AMBIENT_UNDERWATER_EXIT = 'ambient.underwater.exit';
	case AMBIENT_WARPED_FOREST_ADDITIONS = 'ambient.warped_forest.additions';
	case AMBIENT_WARPED_FOREST_LOOP = 'ambient.warped_forest.loop';
	case AMBIENT_WARPED_FOREST_MOOD = 'ambient.warped_forest.mood';
	case AMBIENT_WEATHER_LIGHTNING_IMPACT = 'ambient.weather.lightning.impact';
	case AMBIENT_WEATHER_RAIN = 'ambient.weather.rain';
	case AMBIENT_WEATHER_THUNDER = 'ambient.weather.thunder';
	case APPLY_EFFECT_BAD_OMEN = 'apply_effect.bad_omen';
	case APPLY_EFFECT_RAID_OMEN = 'apply_effect.raid_omen';
	case APPLY_EFFECT_TRIAL_OMEN = 'apply_effect.trial_omen';
	case ARMOR_BREAK_WOLF = 'armor.break_wolf';
	case ARMOR_CRACK_WOLF = 'armor.crack_wolf';
	case ARMOR_DAMAGE_WOLF = 'armor.damage_wolf';
	case ARMOR_EQUIP_CHAIN = 'armor.equip_chain';
	case ARMOR_EQUIP_DIAMOND = 'armor.equip_diamond';
	case ARMOR_EQUIP_GENERIC = 'armor.equip_generic';
	case ARMOR_EQUIP_GOLD = 'armor.equip_gold';
	case ARMOR_EQUIP_IRON = 'armor.equip_iron';
	case ARMOR_EQUIP_LEATHER = 'armor.equip_leather';
	case ARMOR_EQUIP_NETHERITE = 'armor.equip_netherite';
	case ARMOR_EQUIP_WOLF = 'armor.equip_wolf';
	case ARMOR_REPAIR_WOLF = 'armor.repair_wolf';
	case ARMOR_UNEQUIP_WOLF = 'armor.unequip_wolf';
	case BEACON_ACTIVATE = 'beacon.activate';
	case BEACON_AMBIENT = 'beacon.ambient';
	case BEACON_DEACTIVATE = 'beacon.deactivate';
	case BEACON_POWER = 'beacon.power';
	case BLOCK_BAMBOO_BREAK = 'block.bamboo.break';
	case BLOCK_BAMBOO_FALL = 'block.bamboo.fall';
	case BLOCK_BAMBOO_HIT = 'block.bamboo.hit';
	case BLOCK_BAMBOO_PLACE = 'block.bamboo.place';
	case BLOCK_BAMBOO_STEP = 'block.bamboo.step';
	case BLOCK_BAMBOO_SAPLING_BREAK = 'block.bamboo_sapling.break';
	case BLOCK_BAMBOO_SAPLING_PLACE = 'block.bamboo_sapling.place';
	case BLOCK_BARREL_CLOSE = 'block.barrel.close';
	case BLOCK_BARREL_OPEN = 'block.barrel.open';
	case BLOCK_BEEHIVE_DRIP = 'block.beehive.drip';
	case BLOCK_BEEHIVE_ENTER = 'block.beehive.enter';
	case BLOCK_BEEHIVE_EXIT = 'block.beehive.exit';
	case BLOCK_BEEHIVE_SHEAR = 'block.beehive.shear';
	case BLOCK_BEEHIVE_WORK = 'block.beehive.work';
	case BLOCK_BELL_HIT = 'block.bell.hit';
	case BLOCK_BLASTFURNACE_FIRE_CRACKLE = 'block.blastfurnace.fire_crackle';
	case BLOCK_BOWHIT = 'block.bowhit';
	case BLOCK_CAMPFIRE_CRACKLE = 'block.campfire.crackle';
	case BLOCK_CARTOGRAPHY_TABLE_USE = 'block.cartography_table.use';
	case BLOCK_CHORUSFLOWER_DEATH = 'block.chorusflower.death';
	case BLOCK_CHORUSFLOWER_GROW = 'block.chorusflower.grow';
	case BLOCK_CLICK = 'block.click';
	case BLOCK_COMPOSTER_EMPTY = 'block.composter.empty';
	case BLOCK_COMPOSTER_FILL = 'block.composter.fill';
	case BLOCK_COMPOSTER_FILL_SUCCESS = 'block.composter.fill_success';
	case BLOCK_COMPOSTER_READY = 'block.composter.ready';
	case BLOCK_COPPER_BULB_TURN_OFF = 'block.copper_bulb.turn_off';
	case BLOCK_COPPER_BULB_TURN_ON = 'block.copper_bulb.turn_on';
	case BLOCK_DECORATED_POT_INSERT = 'block.decorated_pot.insert';
	case BLOCK_DECORATED_POT_INSERT_FAIL = 'block.decorated_pot.insert_fail';
	case BLOCK_ENCHANTING_TABLE_USE = 'block.enchanting_table.use';
	case BLOCK_END_PORTAL_SPAWN = 'block.end_portal.spawn';
	case BLOCK_END_PORTAL_FRAME_FILL = 'block.end_portal_frame.fill';
	case BLOCK_FALSE_PERMISSIONS = 'block.false_permissions';
	case BLOCK_FURNACE_LIT = 'block.furnace.lit';
	case BLOCK_GRINDSTONE_USE = 'block.grindstone.use';
	case BLOCK_ITEMFRAME_ADD_ITEM = 'block.itemframe.add_item';
	case BLOCK_ITEMFRAME_BREAK = 'block.itemframe.break';
	case BLOCK_ITEMFRAME_PLACE = 'block.itemframe.place';
	case BLOCK_ITEMFRAME_REMOVE_ITEM = 'block.itemframe.remove_item';
	case BLOCK_ITEMFRAME_ROTATE_ITEM = 'block.itemframe.rotate_item';
	case BLOCK_LANTERN_BREAK = 'block.lantern.break';
	case BLOCK_LANTERN_FALL = 'block.lantern.fall';
	case BLOCK_LANTERN_HIT = 'block.lantern.hit';
	case BLOCK_LANTERN_PLACE = 'block.lantern.place';
	case BLOCK_LANTERN_STEP = 'block.lantern.step';
	case BLOCK_LOOM_USE = 'block.loom.use';
	case BLOCK_MANGROVE_ROOTS_BREAK = 'block.mangrove_roots.break';
	case BLOCK_MANGROVE_ROOTS_FALL = 'block.mangrove_roots.fall';
	case BLOCK_MANGROVE_ROOTS_HIT = 'block.mangrove_roots.hit';
	case BLOCK_MANGROVE_ROOTS_PLACE = 'block.mangrove_roots.place';
	case BLOCK_MANGROVE_ROOTS_STEP = 'block.mangrove_roots.step';
	case BLOCK_MUD_BREAK = 'block.mud.break';
	case BLOCK_MUD_FALL = 'block.mud.fall';
	case BLOCK_MUD_HIT = 'block.mud.hit';
	case BLOCK_MUD_PLACE = 'block.mud.place';
	case BLOCK_MUD_STEP = 'block.mud.step';
	case BLOCK_MUD_BRICKS_BREAK = 'block.mud_bricks.break';
	case BLOCK_MUD_BRICKS_FALL = 'block.mud_bricks.fall';
	case BLOCK_MUD_BRICKS_HIT = 'block.mud_bricks.hit';
	case BLOCK_MUD_BRICKS_PLACE = 'block.mud_bricks.place';
	case BLOCK_MUD_BRICKS_STEP = 'block.mud_bricks.step';
	case BLOCK_MUDDY_MANGROVE_ROOTS_BREAK = 'block.muddy_mangrove_roots.break';
	case BLOCK_MUDDY_MANGROVE_ROOTS_FALL = 'block.muddy_mangrove_roots.fall';
	case BLOCK_MUDDY_MANGROVE_ROOTS_HIT = 'block.muddy_mangrove_roots.hit';
	case BLOCK_MUDDY_MANGROVE_ROOTS_PLACE = 'block.muddy_mangrove_roots.place';
	case BLOCK_MUDDY_MANGROVE_ROOTS_STEP = 'block.muddy_mangrove_roots.step';
	case BLOCK_PACKED_MUD_BREAK = 'block.packed_mud.break';
	case BLOCK_PACKED_MUD_FALL = 'block.packed_mud.fall';
	case BLOCK_PACKED_MUD_HIT = 'block.packed_mud.hit';
	case BLOCK_PACKED_MUD_PLACE = 'block.packed_mud.place';
	case BLOCK_PACKED_MUD_STEP = 'block.packed_mud.step';
	case BLOCK_SCAFFOLDING_BREAK = 'block.scaffolding.break';
	case BLOCK_SCAFFOLDING_CLIMB = 'block.scaffolding.climb';
	case BLOCK_SCAFFOLDING_FALL = 'block.scaffolding.fall';
	case BLOCK_SCAFFOLDING_HIT = 'block.scaffolding.hit';
	case BLOCK_SCAFFOLDING_PLACE = 'block.scaffolding.place';
	case BLOCK_SCAFFOLDING_STEP = 'block.scaffolding.step';
	case BLOCK_SIGN_WAXED_INTERACT_FAIL = 'block.sign.waxed_interact_fail';
	case BLOCK_SMOKER_SMOKE = 'block.smoker.smoke';
	case BLOCK_SNIFFER_EGG_CRACK = 'block.sniffer_egg.crack';
	case BLOCK_SNIFFER_EGG_HATCH = 'block.sniffer_egg.hatch';
	case BLOCK_STONECUTTER_USE = 'block.stonecutter.use';
	case BLOCK_SWEET_BERRY_BUSH_BREAK = 'block.sweet_berry_bush.break';
	case BLOCK_SWEET_BERRY_BUSH_HURT = 'block.sweet_berry_bush.hurt';
	case BLOCK_SWEET_BERRY_BUSH_PICK = 'block.sweet_berry_bush.pick';
	case BLOCK_SWEET_BERRY_BUSH_PLACE = 'block.sweet_berry_bush.place';
	case BLOCK_TURTLE_EGG_BREAK = 'block.turtle_egg.break';
	case BLOCK_TURTLE_EGG_CRACK = 'block.turtle_egg.crack';
	case BLOCK_TURTLE_EGG_DROP = 'block.turtle_egg.drop';
	case BLOOM_SCULK_CATALYST = 'bloom.sculk_catalyst';
	case BOTTLE_DRAGONBREATH = 'bottle.dragonbreath';
	case BOTTLE_EMPTY = 'bottle.empty';
	case BOTTLE_FILL = 'bottle.fill';
	case BREAK_AMETHYST_BLOCK = 'break.amethyst_block';
	case BREAK_AMETHYST_CLUSTER = 'break.amethyst_cluster';
	case BREAK_AZALEA = 'break.azalea';
	case BREAK_BAMBOO_WOOD = 'break.bamboo_wood';
	case BREAK_BAMBOO_WOOD_HANGING_SIGN = 'break.bamboo_wood_hanging_sign';
	case BREAK_BIG_DRIPLEAF = 'break.big_dripleaf';
	case BREAK_CALCITE = 'break.calcite';
	case BREAK_CHERRY_LEAVES = 'break.cherry_leaves';
	case BREAK_CHERRY_WOOD = 'break.cherry_wood';
	case BREAK_CHERRY_WOOD_HANGING_SIGN = 'break.cherry_wood_hanging_sign';
	case BREAK_CHISELED_BOOKSHELF = 'break.chiseled_bookshelf';
	case BREAK_COPPER_BULB = 'break.copper_bulb';
	case BREAK_COPPER_GRATE = 'break.copper_grate';
	case BREAK_DECORATED_POT = 'break.decorated_pot';
	case BREAK_DIRT_WITH_ROOTS = 'break.dirt_with_roots';
	case BREAK_DRIPSTONE_BLOCK = 'break.dripstone_block';
	case BREAK_FROG_SPAWN = 'break.frog_spawn';
	case BREAK_FROGLIGHT = 'break.froglight';
	case BREAK_HANGING_ROOTS = 'break.hanging_roots';
	case BREAK_HANGING_SIGN = 'break.hanging_sign';
	case BREAK_HEAVY_CORE = 'break.heavy_core';
	case BREAK_LARGE_AMETHYST_BUD = 'break.large_amethyst_bud';
	case BREAK_MEDIUM_AMETHYST_BUD = 'break.medium_amethyst_bud';
	case BREAK_NETHER_WOOD = 'break.nether_wood';
	case BREAK_NETHER_WOOD_HANGING_SIGN = 'break.nether_wood_hanging_sign';
	case BREAK_PINK_PETALS = 'break.pink_petals';
	case BREAK_POINTED_DRIPSTONE = 'break.pointed_dripstone';
	case BREAK_SCULK = 'break.sculk';
	case BREAK_SCULK_CATALYST = 'break.sculk_catalyst';
	case BREAK_SCULK_SENSOR = 'break.sculk_sensor';
	case BREAK_SCULK_SHRIEKER = 'break.sculk_shrieker';
	case BREAK_SCULK_VEIN = 'break.sculk_vein';
	case BREAK_SMALL_AMETHYST_BUD = 'break.small_amethyst_bud';
	case BREAK_SPORE_BLOSSOM = 'break.spore_blossom';
	case BREAK_SUSPICIOUS_GRAVEL = 'break.suspicious_gravel';
	case BREAK_SUSPICIOUS_SAND = 'break.suspicious_sand';
	case BREAK_TUFF = 'break.tuff';
	case BREAK_WEB = 'break.web';
	case BREEZE_WIND_CHARGE_BURST = 'breeze_wind_charge.burst';
	case BRUSH_GENERIC = 'brush.generic';
	case BRUSH_SUSPICIOUS_GRAVEL = 'brush.suspicious_gravel';
	case BRUSH_SUSPICIOUS_SAND = 'brush.suspicious_sand';
	case BRUSH_COMPLETED_SUSPICIOUS_GRAVEL = 'brush_completed.suspicious_gravel';
	case BRUSH_COMPLETED_SUSPICIOUS_SAND = 'brush_completed.suspicious_sand';
	case BUBBLE_DOWN = 'bubble.down';
	case BUBBLE_DOWNINSIDE = 'bubble.downinside';
	case BUBBLE_POP = 'bubble.pop';
	case BUBBLE_UP = 'bubble.up';
	case BUBBLE_UPINSIDE = 'bubble.upinside';
	case BUCKET_EMPTY_FISH = 'bucket.empty_fish';
	case BUCKET_EMPTY_LAVA = 'bucket.empty_lava';
	case BUCKET_EMPTY_POWDER_SNOW = 'bucket.empty_powder_snow';
	case BUCKET_EMPTY_WATER = 'bucket.empty_water';
	case BUCKET_FILL_FISH = 'bucket.fill_fish';
	case BUCKET_FILL_LAVA = 'bucket.fill_lava';
	case BUCKET_FILL_POWDER_SNOW = 'bucket.fill_powder_snow';
	case BUCKET_FILL_WATER = 'bucket.fill_water';
	case CAKE_ADD_CANDLE = 'cake.add_candle';
	case CAMERA_TAKE_PICTURE = 'camera.take_picture';
	case CAULDRON_ADDDYE = 'cauldron.adddye';
	case CAULDRON_CLEANARMOR = 'cauldron.cleanarmor';
	case CAULDRON_CLEANBANNER = 'cauldron.cleanbanner';
	case CAULDRON_DYEARMOR = 'cauldron.dyearmor';
	case CAULDRON_EXPLODE = 'cauldron.explode';
	case CAULDRON_FILLPOTION = 'cauldron.fillpotion';
	case CAULDRON_FILLWATER = 'cauldron.fillwater';
	case CAULDRON_TAKEPOTION = 'cauldron.takepotion';
	case CAULDRON_TAKEWATER = 'cauldron.takewater';
	case CAULDRON_DRIP_LAVA_POINTED_DRIPSTONE = 'cauldron_drip.lava.pointed_dripstone';
	case CAULDRON_DRIP_WATER_POINTED_DRIPSTONE = 'cauldron_drip.water.pointed_dripstone';
	case CHARGE_SCULK = 'charge.sculk';
	case CHIME_AMETHYST_BLOCK = 'chime.amethyst_block';
	case CLICK_OFF_BAMBOO_WOOD_BUTTON = 'click_off.bamboo_wood_button';
	case CLICK_OFF_BAMBOO_WOOD_PRESSURE_PLATE = 'click_off.bamboo_wood_pressure_plate';
	case CLICK_OFF_CHERRY_WOOD_BUTTON = 'click_off.cherry_wood_button';
	case CLICK_OFF_CHERRY_WOOD_PRESSURE_PLATE = 'click_off.cherry_wood_pressure_plate';
	case CLICK_OFF_METAL_PRESSURE_PLATE = 'click_off.metal_pressure_plate';
	case CLICK_OFF_NETHER_WOOD_BUTTON = 'click_off.nether_wood_button';
	case CLICK_OFF_NETHER_WOOD_PRESSURE_PLATE = 'click_off.nether_wood_pressure_plate';
	case CLICK_OFF_STONE_PRESSURE_PLATE = 'click_off.stone_pressure_plate';
	case CLICK_OFF_WOODEN_PRESSURE_PLATE = 'click_off.wooden_pressure_plate';
	case CLICK_ON_BAMBOO_WOOD_BUTTON = 'click_on.bamboo_wood_button';
	case CLICK_ON_BAMBOO_WOOD_PRESSURE_PLATE = 'click_on.bamboo_wood_pressure_plate';
	case CLICK_ON_CHERRY_WOOD_BUTTON = 'click_on.cherry_wood_button';
	case CLICK_ON_CHERRY_WOOD_PRESSURE_PLATE = 'click_on.cherry_wood_pressure_plate';
	case CLICK_ON_METAL_PRESSURE_PLATE = 'click_on.metal_pressure_plate';
	case CLICK_ON_NETHER_WOOD_BUTTON = 'click_on.nether_wood_button';
	case CLICK_ON_NETHER_WOOD_PRESSURE_PLATE = 'click_on.nether_wood_pressure_plate';
	case CLICK_ON_STONE_PRESSURE_PLATE = 'click_on.stone_pressure_plate';
	case CLICK_ON_WOODEN_PRESSURE_PLATE = 'click_on.wooden_pressure_plate';
	case CLOSE_BAMBOO_WOOD_DOOR = 'close.bamboo_wood_door';
	case CLOSE_BAMBOO_WOOD_FENCE_GATE = 'close.bamboo_wood_fence_gate';
	case CLOSE_BAMBOO_WOOD_TRAPDOOR = 'close.bamboo_wood_trapdoor';
	case CLOSE_CHERRY_WOOD_DOOR = 'close.cherry_wood_door';
	case CLOSE_CHERRY_WOOD_FENCE_GATE = 'close.cherry_wood_fence_gate';
	case CLOSE_CHERRY_WOOD_TRAPDOOR = 'close.cherry_wood_trapdoor';
	case CLOSE_FENCE_GATE = 'close.fence_gate';
	case CLOSE_IRON_DOOR = 'close.iron_door';
	case CLOSE_IRON_TRAPDOOR = 'close.iron_trapdoor';
	case CLOSE_NETHER_WOOD_DOOR = 'close.nether_wood_door';
	case CLOSE_NETHER_WOOD_FENCE_GATE = 'close.nether_wood_fence_gate';
	case CLOSE_NETHER_WOOD_TRAPDOOR = 'close.nether_wood_trapdoor';
	case CLOSE_WOODEN_DOOR = 'close.wooden_door';
	case CLOSE_WOODEN_TRAPDOOR = 'close.wooden_trapdoor';
	case CLOSE_DOOR_COPPER = 'close_door.copper';
	case COMPONENT_JUMP_TO_BLOCK = 'component.jump_to_block';
	case CONDUIT_ACTIVATE = 'conduit.activate';
	case CONDUIT_AMBIENT = 'conduit.ambient';
	case CONDUIT_ATTACK = 'conduit.attack';
	case CONDUIT_DEACTIVATE = 'conduit.deactivate';
	case CONDUIT_SHORT = 'conduit.short';
	case COPPER_WAX_OFF = 'copper.wax.off';
	case COPPER_WAX_ON = 'copper.wax.on';
	case CRAFTER_CRAFT = 'crafter.craft';
	case CRAFTER_DISABLE_SLOT = 'crafter.disable_slot';
	case CRAFTER_FAIL = 'crafter.fail';
	case CROSSBOW_LOADING_END = 'crossbow.loading.end';
	case CROSSBOW_LOADING_MIDDLE = 'crossbow.loading.middle';
	case CROSSBOW_LOADING_START = 'crossbow.loading.start';
	case CROSSBOW_QUICK_CHARGE_END = 'crossbow.quick_charge.end';
	case CROSSBOW_QUICK_CHARGE_MIDDLE = 'crossbow.quick_charge.middle';
	case CROSSBOW_QUICK_CHARGE_START = 'crossbow.quick_charge.start';
	case CROSSBOW_SHOOT = 'crossbow.shoot';
	case DAMAGE_FALLBIG = 'damage.fallbig';
	case DAMAGE_FALLSMALL = 'damage.fallsmall';
	case DAMAGE_THORNS = 'damage.thorns';
	case DIG_ANCIENT_DEBRIS = 'dig.ancient_debris';
	case DIG_AZALEA_LEAVES = 'dig.azalea_leaves';
	case DIG_BASALT = 'dig.basalt';
	case DIG_BONE_BLOCK = 'dig.bone_block';
	case DIG_CANDLE = 'dig.candle';
	case DIG_CAVE_VINES = 'dig.cave_vines';
	case DIG_CHAIN = 'dig.chain';
	case DIG_CLOTH = 'dig.cloth';
	case DIG_COPPER = 'dig.copper';
	case DIG_CORAL = 'dig.coral';
	case DIG_DEEPSLATE = 'dig.deepslate';
	case DIG_DEEPSLATE_BRICKS = 'dig.deepslate_bricks';
	case DIG_FUNGUS = 'dig.fungus';
	case DIG_GRASS = 'dig.grass';
	case DIG_GRAVEL = 'dig.gravel';
	case DIG_HONEY_BLOCK = 'dig.honey_block';
	case DIG_LODESTONE = 'dig.lodestone';
	case DIG_MOSS = 'dig.moss';
	case DIG_NETHER_BRICK = 'dig.nether_brick';
	case DIG_NETHER_GOLD_ORE = 'dig.nether_gold_ore';
	case DIG_NETHER_SPROUTS = 'dig.nether_sprouts';
	case DIG_NETHER_WART = 'dig.nether_wart';
	case DIG_NETHERITE = 'dig.netherite';
	case DIG_NETHERRACK = 'dig.netherrack';
	case DIG_NYLIUM = 'dig.nylium';
	case DIG_POWDER_SNOW = 'dig.powder_snow';
	case DIG_ROOTS = 'dig.roots';
	case DIG_SAND = 'dig.sand';
	case DIG_SHROOMLIGHT = 'dig.shroomlight';
	case DIG_SNOW = 'dig.snow';
	case DIG_SOUL_SAND = 'dig.soul_sand';
	case DIG_SOUL_SOIL = 'dig.soul_soil';
	case DIG_STEM = 'dig.stem';
	case DIG_STONE = 'dig.stone';
	case DIG_VINES = 'dig.vines';
	case DIG_WOOD = 'dig.wood';
	case DRIP_LAVA_POINTED_DRIPSTONE = 'drip.lava.pointed_dripstone';
	case DRIP_WATER_POINTED_DRIPSTONE = 'drip.water.pointed_dripstone';
	case ELYTRA_LOOP = 'elytra.loop';
	case ENTITY_GENERIC_SPLASH = 'entity.generic.splash';
	case ENTITY_WITHER_SKELETON_AMBIENT = 'entity.wither_skeleton.ambient';
	case ENTITY_WITHER_SKELETON_DEATH = 'entity.wither_skeleton.death';
	case ENTITY_WITHER_SKELETON_HURT = 'entity.wither_skeleton.hurt';
	case ENTITY_WITHER_SKELETON_STEP = 'entity.wither_skeleton.step';
	case ENTITY_ZOMBIE_CONVERTED_TO_DROWNED = 'entity.zombie.converted_to_drowned';
	case EXTINGUISH_CANDLE = 'extinguish.candle';
	case FALL_AMETHYST_BLOCK = 'fall.amethyst_block';
	case FALL_AMETHYST_CLUSTER = 'fall.amethyst_cluster';
	case FALL_ANCIENT_DEBRIS = 'fall.ancient_debris';
	case FALL_AZALEA = 'fall.azalea';
	case FALL_AZALEA_LEAVES = 'fall.azalea_leaves';
	case FALL_BAMBOO_WOOD = 'fall.bamboo_wood';
	case FALL_BASALT = 'fall.basalt';
	case FALL_BIG_DRIPLEAF = 'fall.big_dripleaf';
	case FALL_BONE_BLOCK = 'fall.bone_block';
	case FALL_CALCITE = 'fall.calcite';
	case FALL_CAVE_VINES = 'fall.cave_vines';
	case FALL_CHAIN = 'fall.chain';
	case FALL_CHERRY_LEAVES = 'fall.cherry_leaves';
	case FALL_CHERRY_WOOD = 'fall.cherry_wood';
	case FALL_CLOTH = 'fall.cloth';
	case FALL_COPPER = 'fall.copper';
	case FALL_COPPER_BULB = 'fall.copper_bulb';
	case FALL_CORAL = 'fall.coral';
	case FALL_DEEPSLATE = 'fall.deepslate';
	case FALL_DEEPSLATE_BRICKS = 'fall.deepslate_bricks';
	case FALL_DIRT_WITH_ROOTS = 'fall.dirt_with_roots';
	case FALL_DRIPSTONE_BLOCK = 'fall.dripstone_block';
	case FALL_EGG = 'fall.egg';
	case FALL_GRASS = 'fall.grass';
	case FALL_GRAVEL = 'fall.gravel';
	case FALL_HANGING_ROOTS = 'fall.hanging_roots';
	case FALL_HONEY_BLOCK = 'fall.honey_block';
	case FALL_LADDER = 'fall.ladder';
	case FALL_MOSS = 'fall.moss';
	case FALL_NETHER_BRICK = 'fall.nether_brick';
	case FALL_NETHER_GOLD_ORE = 'fall.nether_gold_ore';
	case FALL_NETHER_SPROUTS = 'fall.nether_sprouts';
	case FALL_NETHER_WART = 'fall.nether_wart';
	case FALL_NETHER_WOOD = 'fall.nether_wood';
	case FALL_NETHERITE = 'fall.netherite';
	case FALL_NETHERRACK = 'fall.netherrack';
	case FALL_NYLIUM = 'fall.nylium';
	case FALL_PINK_PETALS = 'fall.pink_petals';
	case FALL_POINTED_DRIPSTONE = 'fall.pointed_dripstone';
	case FALL_POWDER_SNOW = 'fall.powder_snow';
	case FALL_ROOTS = 'fall.roots';
	case FALL_SAND = 'fall.sand';
	case FALL_SCULK_SENSOR = 'fall.sculk_sensor';
	case FALL_SCULK_SHRIEKER = 'fall.sculk_shrieker';
	case FALL_SHROOMLIGHT = 'fall.shroomlight';
	case FALL_SLIME = 'fall.slime';
	case FALL_SNOW = 'fall.snow';
	case FALL_SOUL_SAND = 'fall.soul_sand';
	case FALL_SOUL_SOIL = 'fall.soul_soil';
	case FALL_SPORE_BLOSSOM = 'fall.spore_blossom';
	case FALL_STEM = 'fall.stem';
	case FALL_STONE = 'fall.stone';
	case FALL_TUFF = 'fall.tuff';
	case FALL_VINES = 'fall.vines';
	case FALL_WOOD = 'fall.wood';
	case FIRE_FIRE = 'fire.fire';
	case FIRE_IGNITE = 'fire.ignite';
	case FIREWORK_BLAST = 'firework.blast';
	case FIREWORK_LARGE_BLAST = 'firework.large_blast';
	case FIREWORK_LAUNCH = 'firework.launch';
	case FIREWORK_SHOOT = 'firework.shoot';
	case FIREWORK_TWINKLE = 'firework.twinkle';
	case GAME_PLAYER_ATTACK_NODAMAGE = 'game.player.attack.nodamage';
	case GAME_PLAYER_ATTACK_STRONG = 'game.player.attack.strong';
	case GAME_PLAYER_DIE = 'game.player.die';
	case GAME_PLAYER_HURT = 'game.player.hurt';
	case HATCH_FROG_SPAWN = 'hatch.frog_spawn';
	case HIT_AMETHYST_BLOCK = 'hit.amethyst_block';
	case HIT_AMETHYST_CLUSTER = 'hit.amethyst_cluster';
	case HIT_ANCIENT_DEBRIS = 'hit.ancient_debris';
	case HIT_ANVIL = 'hit.anvil';
	case HIT_AZALEA = 'hit.azalea';
	case HIT_AZALEA_LEAVES = 'hit.azalea_leaves';
	case HIT_BAMBOO_WOOD = 'hit.bamboo_wood';
	case HIT_BASALT = 'hit.basalt';
	case HIT_BIG_DRIPLEAF = 'hit.big_dripleaf';
	case HIT_BONE_BLOCK = 'hit.bone_block';
	case HIT_CALCITE = 'hit.calcite';
	case HIT_CANDLE = 'hit.candle';
	case HIT_CAVE_VINES = 'hit.cave_vines';
	case HIT_CHAIN = 'hit.chain';
	case HIT_CHERRY_LEAVES = 'hit.cherry_leaves';
	case HIT_CHERRY_WOOD = 'hit.cherry_wood';
	case HIT_CHISELED_BOOKSHELF = 'hit.chiseled_bookshelf';
	case HIT_CLOTH = 'hit.cloth';
	case HIT_COPPER = 'hit.copper';
	case HIT_COPPER_BULB = 'hit.copper_bulb';
	case HIT_CORAL = 'hit.coral';
	case HIT_DEEPSLATE = 'hit.deepslate';
	case HIT_DEEPSLATE_BRICKS = 'hit.deepslate_bricks';
	case HIT_DIRT_WITH_ROOTS = 'hit.dirt_with_roots';
	case HIT_DRIPSTONE_BLOCK = 'hit.dripstone_block';
	case HIT_GRASS = 'hit.grass';
	case HIT_GRAVEL = 'hit.gravel';
	case HIT_HANGING_ROOTS = 'hit.hanging_roots';
	case HIT_HONEY_BLOCK = 'hit.honey_block';
	case HIT_LADDER = 'hit.ladder';
	case HIT_MOSS = 'hit.moss';
	case HIT_NETHER_BRICK = 'hit.nether_brick';
	case HIT_NETHER_GOLD_ORE = 'hit.nether_gold_ore';
	case HIT_NETHER_SPROUTS = 'hit.nether_sprouts';
	case HIT_NETHER_WART = 'hit.nether_wart';
	case HIT_NETHER_WOOD = 'hit.nether_wood';
	case HIT_NETHERITE = 'hit.netherite';
	case HIT_NETHERRACK = 'hit.netherrack';
	case HIT_NYLIUM = 'hit.nylium';
	case HIT_PINK_PETALS = 'hit.pink_petals';
	case HIT_POINTED_DRIPSTONE = 'hit.pointed_dripstone';
	case HIT_POWDER_SNOW = 'hit.powder_snow';
	case HIT_ROOTS = 'hit.roots';
	case HIT_SAND = 'hit.sand';
	case HIT_SCULK = 'hit.sculk';
	case HIT_SCULK_CATALYST = 'hit.sculk_catalyst';
	case HIT_SCULK_SENSOR = 'hit.sculk_sensor';
	case HIT_SCULK_SHRIEKER = 'hit.sculk_shrieker';
	case HIT_SHROOMLIGHT = 'hit.shroomlight';
	case HIT_SLIME = 'hit.slime';
	case HIT_SNOW = 'hit.snow';
	case HIT_SOUL_SAND = 'hit.soul_sand';
	case HIT_SOUL_SOIL = 'hit.soul_soil';
	case HIT_SPORE_BLOSSOM = 'hit.spore_blossom';
	case HIT_STEM = 'hit.stem';
	case HIT_STONE = 'hit.stone';
	case HIT_SUSPICIOUS_GRAVEL = 'hit.suspicious_gravel';
	case HIT_SUSPICIOUS_SAND = 'hit.suspicious_sand';
	case HIT_TUFF = 'hit.tuff';
	case HIT_VINES = 'hit.vines';
	case HIT_WOOD = 'hit.wood';
	case HORN_CALL_0 = 'horn.call.0';
	case HORN_CALL_1 = 'horn.call.1';
	case HORN_CALL_2 = 'horn.call.2';
	case HORN_CALL_3 = 'horn.call.3';
	case HORN_CALL_4 = 'horn.call.4';
	case HORN_CALL_5 = 'horn.call.5';
	case HORN_CALL_6 = 'horn.call.6';
	case HORN_CALL_7 = 'horn.call.7';
	case HUD_BUBBLE_POP = 'hud.bubble.pop';
	case INSERT_CHISELED_BOOKSHELF = 'insert.chiseled_bookshelf';
	case INSERT_ENCHANTED_CHISELED_BOOKSHELF = 'insert_enchanted.chiseled_bookshelf';
	case ITEM_BONE_MEAL_USE = 'item.bone_meal.use';
	case ITEM_BOOK_PAGE_TURN = 'item.book.page_turn';
	case ITEM_BOOK_PUT = 'item.book.put';
	case ITEM_SHIELD_BLOCK = 'item.shield.block';
	case ITEM_SPYGLASS_STOP_USING = 'item.spyglass.stop_using';
	case ITEM_SPYGLASS_USE = 'item.spyglass.use';
	case ITEM_TRIDENT_HIT = 'item.trident.hit';
	case ITEM_TRIDENT_HIT_GROUND = 'item.trident.hit_ground';
	case ITEM_TRIDENT_RETURN = 'item.trident.return';
	case ITEM_TRIDENT_RIPTIDE_1 = 'item.trident.riptide_1';
	case ITEM_TRIDENT_RIPTIDE_2 = 'item.trident.riptide_2';
	case ITEM_TRIDENT_RIPTIDE_3 = 'item.trident.riptide_3';
	case ITEM_TRIDENT_THROW = 'item.trident.throw';
	case ITEM_TRIDENT_THUNDER = 'item.trident.thunder';
	case JUMP_ANCIENT_DEBRIS = 'jump.ancient_debris';
	case JUMP_AZALEA = 'jump.azalea';
	case JUMP_BASALT = 'jump.basalt';
	case JUMP_BIG_DRIPLEAF = 'jump.big_dripleaf';
	case JUMP_BONE_BLOCK = 'jump.bone_block';
	case JUMP_CAVE_VINES = 'jump.cave_vines';
	case JUMP_CHAIN = 'jump.chain';
	case JUMP_CLOTH = 'jump.cloth';
	case JUMP_CORAL = 'jump.coral';
	case JUMP_DEEPSLATE = 'jump.deepslate';
	case JUMP_DEEPSLATE_BRICKS = 'jump.deepslate_bricks';
	case JUMP_DIRT_WITH_ROOTS = 'jump.dirt_with_roots';
	case JUMP_DRIPSTONE_BLOCK = 'jump.dripstone_block';
	case JUMP_GRASS = 'jump.grass';
	case JUMP_GRAVEL = 'jump.gravel';
	case JUMP_HANGING_ROOTS = 'jump.hanging_roots';
	case JUMP_HONEY_BLOCK = 'jump.honey_block';
	case JUMP_MOSS = 'jump.moss';
	case JUMP_NETHER_BRICK = 'jump.nether_brick';
	case JUMP_NETHER_GOLD_ORE = 'jump.nether_gold_ore';
	case JUMP_NETHER_SPROUTS = 'jump.nether_sprouts';
	case JUMP_NETHER_WART = 'jump.nether_wart';
	case JUMP_NETHERITE = 'jump.netherite';
	case JUMP_NETHERRACK = 'jump.netherrack';
	case JUMP_NYLIUM = 'jump.nylium';
	case JUMP_POINTED_DRIPSTONE = 'jump.pointed_dripstone';
	case JUMP_ROOTS = 'jump.roots';
	case JUMP_SAND = 'jump.sand';
	case JUMP_SCULK_SENSOR = 'jump.sculk_sensor';
	case JUMP_SHROOMLIGHT = 'jump.shroomlight';
	case JUMP_SLIME = 'jump.slime';
	case JUMP_SNOW = 'jump.snow';
	case JUMP_SOUL_SAND = 'jump.soul_sand';
	case JUMP_SOUL_SOIL = 'jump.soul_soil';
	case JUMP_SPORE_BLOSSOM = 'jump.spore_blossom';
	case JUMP_STEM = 'jump.stem';
	case JUMP_STONE = 'jump.stone';
	case JUMP_VINES = 'jump.vines';
	case JUMP_WOOD = 'jump.wood';
	case LAND_ANCIENT_DEBRIS = 'land.ancient_debris';
	case LAND_AZALEA = 'land.azalea';
	case LAND_BASALT = 'land.basalt';
	case LAND_BIG_DRIPLEAF = 'land.big_dripleaf';
	case LAND_BONE_BLOCK = 'land.bone_block';
	case LAND_CAVE_VINES = 'land.cave_vines';
	case LAND_CHAIN = 'land.chain';
	case LAND_CLOTH = 'land.cloth';
	case LAND_CORAL = 'land.coral';
	case LAND_DEEPSLATE = 'land.deepslate';
	case LAND_DEEPSLATE_BRICKS = 'land.deepslate_bricks';
	case LAND_DIRT_WITH_ROOTS = 'land.dirt_with_roots';
	case LAND_DRIPSTONE_BLOCK = 'land.dripstone_block';
	case LAND_GRASS = 'land.grass';
	case LAND_GRAVEL = 'land.gravel';
	case LAND_HANGING_ROOTS = 'land.hanging_roots';
	case LAND_HONEY_BLOCK = 'land.honey_block';
	case LAND_MOSS = 'land.moss';
	case LAND_NETHER_BRICK = 'land.nether_brick';
	case LAND_NETHER_GOLD_ORE = 'land.nether_gold_ore';
	case LAND_NETHER_SPROUTS = 'land.nether_sprouts';
	case LAND_NETHER_WART = 'land.nether_wart';
	case LAND_NETHERITE = 'land.netherite';
	case LAND_NETHERRACK = 'land.netherrack';
	case LAND_NYLIUM = 'land.nylium';
	case LAND_POINTED_DRIPSTONE = 'land.pointed_dripstone';
	case LAND_ROOTS = 'land.roots';
	case LAND_SAND = 'land.sand';
	case LAND_SCULK_SENSOR = 'land.sculk_sensor';
	case LAND_SHROOMLIGHT = 'land.shroomlight';
	case LAND_SLIME = 'land.slime';
	case LAND_SNOW = 'land.snow';
	case LAND_SOUL_SAND = 'land.soul_sand';
	case LAND_SOUL_SOIL = 'land.soul_soil';
	case LAND_SPORE_BLOSSOM = 'land.spore_blossom';
	case LAND_STEM = 'land.stem';
	case LAND_STONE = 'land.stone';
	case LAND_VINES = 'land.vines';
	case LAND_WOOD = 'land.wood';
	case LEASHKNOT_BREAK = 'leashknot.break';
	case LEASHKNOT_PLACE = 'leashknot.place';
	case LIQUID_LAVA = 'liquid.lava';
	case LIQUID_LAVAPOP = 'liquid.lavapop';
	case LIQUID_WATER = 'liquid.water';
	case LODESTONE_COMPASS_LINK_COMPASS_TO_LODESTONE = 'lodestone_compass.link_compass_to_lodestone';
	case MACE_HEAVY_SMASH_GROUND = 'mace.heavy_smash_ground';
	case MACE_SMASH_AIR = 'mace.smash_air';
	case MACE_SMASH_GROUND = 'mace.smash_ground';
	case MINECART_BASE = 'minecart.base';
	case MINECART_INSIDE = 'minecart.inside';
	case MOB_AGENT_SPAWN = 'mob.agent.spawn';
	case MOB_ALLAY_DEATH = 'mob.allay.death';
	case MOB_ALLAY_HURT = 'mob.allay.hurt';
	case MOB_ALLAY_IDLE = 'mob.allay.idle';
	case MOB_ALLAY_IDLE_HOLDING = 'mob.allay.idle_holding';
	case MOB_ALLAY_ITEM_GIVEN = 'mob.allay.item_given';
	case MOB_ALLAY_ITEM_TAKEN = 'mob.allay.item_taken';
	case MOB_ALLAY_ITEM_THROWN = 'mob.allay.item_thrown';
	case MOB_ARMADILLO_AMBIENT = 'mob.armadillo.ambient';
	case MOB_ARMADILLO_BRUSH = 'mob.armadillo.brush';
	case MOB_ARMADILLO_DEATH = 'mob.armadillo.death';
	case MOB_ARMADILLO_EAT = 'mob.armadillo.eat';
	case MOB_ARMADILLO_HURT = 'mob.armadillo.hurt';
	case MOB_ARMADILLO_HURT_REDUCED = 'mob.armadillo.hurt_reduced';
	case MOB_ARMADILLO_LAND = 'mob.armadillo.land';
	case MOB_ARMADILLO_PEEK = 'mob.armadillo.peek';
	case MOB_ARMADILLO_ROLL = 'mob.armadillo.roll';
	case MOB_ARMADILLO_SCUTE_DROP = 'mob.armadillo.scute_drop';
	case MOB_ARMADILLO_STEP = 'mob.armadillo.step';
	case MOB_ARMADILLO_UNROLL_FINISH = 'mob.armadillo.unroll_finish';
	case MOB_ARMADILLO_UNROLL_START = 'mob.armadillo.unroll_start';
	case MOB_ARMOR_STAND_BREAK = 'mob.armor_stand.break';
	case MOB_ARMOR_STAND_HIT = 'mob.armor_stand.hit';
	case MOB_ARMOR_STAND_LAND = 'mob.armor_stand.land';
	case MOB_ARMOR_STAND_PLACE = 'mob.armor_stand.place';
	case MOB_AXOLOTL_ATTACK = 'mob.axolotl.attack';
	case MOB_AXOLOTL_DEATH = 'mob.axolotl.death';
	case MOB_AXOLOTL_HURT = 'mob.axolotl.hurt';
	case MOB_AXOLOTL_IDLE = 'mob.axolotl.idle';
	case MOB_AXOLOTL_IDLE_WATER = 'mob.axolotl.idle_water';
	case MOB_AXOLOTL_SPLASH = 'mob.axolotl.splash';
	case MOB_AXOLOTL_SWIM = 'mob.axolotl.swim';
	case MOB_BAT_DEATH = 'mob.bat.death';
	case MOB_BAT_HURT = 'mob.bat.hurt';
	case MOB_BAT_IDLE = 'mob.bat.idle';
	case MOB_BAT_TAKEOFF = 'mob.bat.takeoff';
	case MOB_BEE_AGGRESSIVE = 'mob.bee.aggressive';
	case MOB_BEE_DEATH = 'mob.bee.death';
	case MOB_BEE_HURT = 'mob.bee.hurt';
	case MOB_BEE_LOOP = 'mob.bee.loop';
	case MOB_BEE_POLLINATE = 'mob.bee.pollinate';
	case MOB_BEE_STING = 'mob.bee.sting';
	case MOB_BLAZE_BREATHE = 'mob.blaze.breathe';
	case MOB_BLAZE_DEATH = 'mob.blaze.death';
	case MOB_BLAZE_HIT = 'mob.blaze.hit';
	case MOB_BLAZE_SHOOT = 'mob.blaze.shoot';
	case MOB_BOGGED_AMBIENT = 'mob.bogged.ambient';
	case MOB_BOGGED_DEATH = 'mob.bogged.death';
	case MOB_BOGGED_HURT = 'mob.bogged.hurt';
	case MOB_BOGGED_STEP = 'mob.bogged.step';
	case MOB_BREEZE_CHARGE = 'mob.breeze.charge';
	case MOB_BREEZE_DEATH = 'mob.breeze.death';
	case MOB_BREEZE_DEFLECT = 'mob.breeze.deflect';
	case MOB_BREEZE_HURT = 'mob.breeze.hurt';
	case MOB_BREEZE_IDLE_AIR = 'mob.breeze.idle_air';
	case MOB_BREEZE_IDLE_GROUND = 'mob.breeze.idle_ground';
	case MOB_BREEZE_INHALE = 'mob.breeze.inhale';
	case MOB_BREEZE_JUMP = 'mob.breeze.jump';
	case MOB_BREEZE_LAND = 'mob.breeze.land';
	case MOB_BREEZE_SHOOT = 'mob.breeze.shoot';
	case MOB_BREEZE_SLIDE = 'mob.breeze.slide';
	case MOB_BREEZE_WHIRL = 'mob.breeze.whirl';
	case MOB_CAMEL_AMBIENT = 'mob.camel.ambient';
	case MOB_CAMEL_DASH = 'mob.camel.dash';
	case MOB_CAMEL_DASH_READY = 'mob.camel.dash_ready';
	case MOB_CAMEL_DEATH = 'mob.camel.death';
	case MOB_CAMEL_EAT = 'mob.camel.eat';
	case MOB_CAMEL_HURT = 'mob.camel.hurt';
	case MOB_CAMEL_SIT = 'mob.camel.sit';
	case MOB_CAMEL_STAND = 'mob.camel.stand';
	case MOB_CAMEL_STEP = 'mob.camel.step';
	case MOB_CAMEL_STEP_SAND = 'mob.camel.step_sand';
	case MOB_CAT_BEG = 'mob.cat.beg';
	case MOB_CAT_BEG_FOR_FOOD = 'mob.cat.beg_for_food';
	case MOB_CAT_EAT = 'mob.cat.eat';
	case MOB_CAT_HISS = 'mob.cat.hiss';
	case MOB_CAT_HIT = 'mob.cat.hit';
	case MOB_CAT_MEOW = 'mob.cat.meow';
	case MOB_CAT_PURR = 'mob.cat.purr';
	case MOB_CAT_PURREOW = 'mob.cat.purreow';
	case MOB_CAT_STRAYMEOW = 'mob.cat.straymeow';
	case MOB_CHICKEN_HURT = 'mob.chicken.hurt';
	case MOB_CHICKEN_PLOP = 'mob.chicken.plop';
	case MOB_CHICKEN_SAY = 'mob.chicken.say';
	case MOB_CHICKEN_STEP = 'mob.chicken.step';
	case MOB_COW_HURT = 'mob.cow.hurt';
	case MOB_COW_MILK = 'mob.cow.milk';
	case MOB_COW_SAY = 'mob.cow.say';
	case MOB_COW_STEP = 'mob.cow.step';
	case MOB_CREEPER_DEATH = 'mob.creeper.death';
	case MOB_CREEPER_SAY = 'mob.creeper.say';
	case MOB_DOLPHIN_ATTACK = 'mob.dolphin.attack';
	case MOB_DOLPHIN_BLOWHOLE = 'mob.dolphin.blowhole';
	case MOB_DOLPHIN_DEATH = 'mob.dolphin.death';
	case MOB_DOLPHIN_EAT = 'mob.dolphin.eat';
	case MOB_DOLPHIN_HURT = 'mob.dolphin.hurt';
	case MOB_DOLPHIN_IDLE = 'mob.dolphin.idle';
	case MOB_DOLPHIN_IDLE_WATER = 'mob.dolphin.idle_water';
	case MOB_DOLPHIN_JUMP = 'mob.dolphin.jump';
	case MOB_DOLPHIN_PLAY = 'mob.dolphin.play';
	case MOB_DOLPHIN_SPLASH = 'mob.dolphin.splash';
	case MOB_DOLPHIN_SWIM = 'mob.dolphin.swim';
	case MOB_DROWNED_DEATH = 'mob.drowned.death';
	case MOB_DROWNED_DEATH_WATER = 'mob.drowned.death_water';
	case MOB_DROWNED_HURT = 'mob.drowned.hurt';
	case MOB_DROWNED_HURT_WATER = 'mob.drowned.hurt_water';
	case MOB_DROWNED_SAY = 'mob.drowned.say';
	case MOB_DROWNED_SAY_WATER = 'mob.drowned.say_water';
	case MOB_DROWNED_SHOOT = 'mob.drowned.shoot';
	case MOB_DROWNED_STEP = 'mob.drowned.step';
	case MOB_DROWNED_SWIM = 'mob.drowned.swim';
	case MOB_ELDERGUARDIAN_CURSE = 'mob.elderguardian.curse';
	case MOB_ELDERGUARDIAN_DEATH = 'mob.elderguardian.death';
	case MOB_ELDERGUARDIAN_HIT = 'mob.elderguardian.hit';
	case MOB_ELDERGUARDIAN_IDLE = 'mob.elderguardian.idle';
	case MOB_ENDERDRAGON_DEATH = 'mob.enderdragon.death';
	case MOB_ENDERDRAGON_FLAP = 'mob.enderdragon.flap';
	case MOB_ENDERDRAGON_GROWL = 'mob.enderdragon.growl';
	case MOB_ENDERDRAGON_HIT = 'mob.enderdragon.hit';
	case MOB_ENDERMEN_DEATH = 'mob.endermen.death';
	case MOB_ENDERMEN_HIT = 'mob.endermen.hit';
	case MOB_ENDERMEN_IDLE = 'mob.endermen.idle';
	case MOB_ENDERMEN_PORTAL = 'mob.endermen.portal';
	case MOB_ENDERMEN_SCREAM = 'mob.endermen.scream';
	case MOB_ENDERMEN_STARE = 'mob.endermen.stare';
	case MOB_ENDERMITE_HIT = 'mob.endermite.hit';
	case MOB_ENDERMITE_KILL = 'mob.endermite.kill';
	case MOB_ENDERMITE_SAY = 'mob.endermite.say';
	case MOB_ENDERMITE_STEP = 'mob.endermite.step';
	case MOB_EVOCATION_FANGS_ATTACK = 'mob.evocation_fangs.attack';
	case MOB_EVOCATION_ILLAGER_AMBIENT = 'mob.evocation_illager.ambient';
	case MOB_EVOCATION_ILLAGER_CAST_SPELL = 'mob.evocation_illager.cast_spell';
	case MOB_EVOCATION_ILLAGER_CELEBRATE = 'mob.evocation_illager.celebrate';
	case MOB_EVOCATION_ILLAGER_DEATH = 'mob.evocation_illager.death';
	case MOB_EVOCATION_ILLAGER_HURT = 'mob.evocation_illager.hurt';
	case MOB_EVOCATION_ILLAGER_PREPARE_ATTACK = 'mob.evocation_illager.prepare_attack';
	case MOB_EVOCATION_ILLAGER_PREPARE_SUMMON = 'mob.evocation_illager.prepare_summon';
	case MOB_EVOCATION_ILLAGER_PREPARE_WOLOLO = 'mob.evocation_illager.prepare_wololo';
	case MOB_FISH_FLOP = 'mob.fish.flop';
	case MOB_FISH_HURT = 'mob.fish.hurt';
	case MOB_FISH_STEP = 'mob.fish.step';
	case MOB_FOX_AGGRO = 'mob.fox.aggro';
	case MOB_FOX_AMBIENT = 'mob.fox.ambient';
	case MOB_FOX_BITE = 'mob.fox.bite';
	case MOB_FOX_DEATH = 'mob.fox.death';
	case MOB_FOX_EAT = 'mob.fox.eat';
	case MOB_FOX_HURT = 'mob.fox.hurt';
	case MOB_FOX_SCREECH = 'mob.fox.screech';
	case MOB_FOX_SLEEP = 'mob.fox.sleep';
	case MOB_FOX_SNIFF = 'mob.fox.sniff';
	case MOB_FOX_SPIT = 'mob.fox.spit';
	case MOB_FROG_AMBIENT = 'mob.frog.ambient';
	case MOB_FROG_DEATH = 'mob.frog.death';
	case MOB_FROG_EAT = 'mob.frog.eat';
	case MOB_FROG_HURT = 'mob.frog.hurt';
	case MOB_FROG_JUMP_TO_BLOCK = 'mob.frog.jump_to_block';
	case MOB_FROG_LAY_SPAWN = 'mob.frog.lay_spawn';
	case MOB_FROG_STEP = 'mob.frog.step';
	case MOB_FROG_TONGUE = 'mob.frog.tongue';
	case MOB_GHAST_AFFECTIONATE_SCREAM = 'mob.ghast.affectionate_scream';
	case MOB_GHAST_CHARGE = 'mob.ghast.charge';
	case MOB_GHAST_DEATH = 'mob.ghast.death';
	case MOB_GHAST_FIREBALL = 'mob.ghast.fireball';
	case MOB_GHAST_MOAN = 'mob.ghast.moan';
	case MOB_GHAST_SCREAM = 'mob.ghast.scream';
	case MOB_GLOW_SQUID_AMBIENT = 'mob.glow_squid.ambient';
	case MOB_GLOW_SQUID_DEATH = 'mob.glow_squid.death';
	case MOB_GLOW_SQUID_HURT = 'mob.glow_squid.hurt';
	case MOB_GLOW_SQUID_INK_SQUIRT = 'mob.glow_squid.ink_squirt';
	case MOB_GOAT_AMBIENT = 'mob.goat.ambient';
	case MOB_GOAT_AMBIENT_SCREAMER = 'mob.goat.ambient.screamer';
	case MOB_GOAT_DEATH = 'mob.goat.death';
	case MOB_GOAT_DEATH_SCREAMER = 'mob.goat.death.screamer';
	case MOB_GOAT_EAT = 'mob.goat.eat';
	case MOB_GOAT_HORN_BREAK = 'mob.goat.horn_break';
	case MOB_GOAT_HURT = 'mob.goat.hurt';
	case MOB_GOAT_HURT_SCREAMER = 'mob.goat.hurt.screamer';
	case MOB_GOAT_MILK_SCREAMER = 'mob.goat.milk.screamer';
	case MOB_GOAT_PREPARE_RAM = 'mob.goat.prepare_ram';
	case MOB_GOAT_PREPARE_RAM_SCREAMER = 'mob.goat.prepare_ram.screamer';
	case MOB_GOAT_RAM_IMPACT = 'mob.goat.ram_impact';
	case MOB_GOAT_RAM_IMPACT_SCREAMER = 'mob.goat.ram_impact.screamer';
	case MOB_GOAT_STEP = 'mob.goat.step';
	case MOB_GUARDIAN_AMBIENT = 'mob.guardian.ambient';
	case MOB_GUARDIAN_ATTACK_LOOP = 'mob.guardian.attack_loop';
	case MOB_GUARDIAN_DEATH = 'mob.guardian.death';
	case MOB_GUARDIAN_FLOP = 'mob.guardian.flop';
	case MOB_GUARDIAN_HIT = 'mob.guardian.hit';
	case MOB_GUARDIAN_LAND_DEATH = 'mob.guardian.land_death';
	case MOB_GUARDIAN_LAND_HIT = 'mob.guardian.land_hit';
	case MOB_GUARDIAN_LAND_IDLE = 'mob.guardian.land_idle';
	case MOB_HOGLIN_AMBIENT = 'mob.hoglin.ambient';
	case MOB_HOGLIN_ANGRY = 'mob.hoglin.angry';
	case MOB_HOGLIN_ATTACK = 'mob.hoglin.attack';
	case MOB_HOGLIN_CONVERTED_TO_ZOMBIFIED = 'mob.hoglin.converted_to_zombified';
	case MOB_HOGLIN_DEATH = 'mob.hoglin.death';
	case MOB_HOGLIN_HOWL = 'mob.hoglin.howl';
	case MOB_HOGLIN_HURT = 'mob.hoglin.hurt';
	case MOB_HOGLIN_RETREAT = 'mob.hoglin.retreat';
	case MOB_HOGLIN_STEP = 'mob.hoglin.step';
	case MOB_HORSE_ANGRY = 'mob.horse.angry';
	case MOB_HORSE_ARMOR = 'mob.horse.armor';
	case MOB_HORSE_BREATHE = 'mob.horse.breathe';
	case MOB_HORSE_DEATH = 'mob.horse.death';
	case MOB_HORSE_DONKEY_ANGRY = 'mob.horse.donkey.angry';
	case MOB_HORSE_DONKEY_DEATH = 'mob.horse.donkey.death';
	case MOB_HORSE_DONKEY_HIT = 'mob.horse.donkey.hit';
	case MOB_HORSE_DONKEY_IDLE = 'mob.horse.donkey.idle';
	case MOB_HORSE_EAT = 'mob.horse.eat';
	case MOB_HORSE_GALLOP = 'mob.horse.gallop';
	case MOB_HORSE_HIT = 'mob.horse.hit';
	case MOB_HORSE_IDLE = 'mob.horse.idle';
	case MOB_HORSE_JUMP = 'mob.horse.jump';
	case MOB_HORSE_LAND = 'mob.horse.land';
	case MOB_HORSE_LEATHER = 'mob.horse.leather';
	case MOB_HORSE_SKELETON_DEATH = 'mob.horse.skeleton.death';
	case MOB_HORSE_SKELETON_HIT = 'mob.horse.skeleton.hit';
	case MOB_HORSE_SKELETON_IDLE = 'mob.horse.skeleton.idle';
	case MOB_HORSE_SOFT = 'mob.horse.soft';
	case MOB_HORSE_WOOD = 'mob.horse.wood';
	case MOB_HORSE_ZOMBIE_DEATH = 'mob.horse.zombie.death';
	case MOB_HORSE_ZOMBIE_HIT = 'mob.horse.zombie.hit';
	case MOB_HORSE_ZOMBIE_IDLE = 'mob.horse.zombie.idle';
	case MOB_HUSK_AMBIENT = 'mob.husk.ambient';
	case MOB_HUSK_CONVERT_TO_ZOMBIE = 'mob.husk.convert_to_zombie';
	case MOB_HUSK_DEATH = 'mob.husk.death';
	case MOB_HUSK_HURT = 'mob.husk.hurt';
	case MOB_HUSK_STEP = 'mob.husk.step';
	case MOB_IRONGOLEM_CRACK = 'mob.irongolem.crack';
	case MOB_IRONGOLEM_DEATH = 'mob.irongolem.death';
	case MOB_IRONGOLEM_HIT = 'mob.irongolem.hit';
	case MOB_IRONGOLEM_REPAIR = 'mob.irongolem.repair';
	case MOB_IRONGOLEM_THROW = 'mob.irongolem.throw';
	case MOB_IRONGOLEM_WALK = 'mob.irongolem.walk';
	case MOB_LLAMA_ANGRY = 'mob.llama.angry';
	case MOB_LLAMA_DEATH = 'mob.llama.death';
	case MOB_LLAMA_EAT = 'mob.llama.eat';
	case MOB_LLAMA_HURT = 'mob.llama.hurt';
	case MOB_LLAMA_IDLE = 'mob.llama.idle';
	case MOB_LLAMA_SPIT = 'mob.llama.spit';
	case MOB_LLAMA_STEP = 'mob.llama.step';
	case MOB_LLAMA_SWAG = 'mob.llama.swag';
	case MOB_MAGMACUBE_BIG = 'mob.magmacube.big';
	case MOB_MAGMACUBE_JUMP = 'mob.magmacube.jump';
	case MOB_MAGMACUBE_SMALL = 'mob.magmacube.small';
	case MOB_MOOSHROOM_CONVERT = 'mob.mooshroom.convert';
	case MOB_MOOSHROOM_EAT = 'mob.mooshroom.eat';
	case MOB_MOOSHROOM_SUSPICIOUS_MILK = 'mob.mooshroom.suspicious_milk';
	case MOB_OCELOT_DEATH = 'mob.ocelot.death';
	case MOB_OCELOT_IDLE = 'mob.ocelot.idle';
	case MOB_PANDA_BITE = 'mob.panda.bite';
	case MOB_PANDA_CANT_BREED = 'mob.panda.cant_breed';
	case MOB_PANDA_DEATH = 'mob.panda.death';
	case MOB_PANDA_EAT = 'mob.panda.eat';
	case MOB_PANDA_HURT = 'mob.panda.hurt';
	case MOB_PANDA_IDLE = 'mob.panda.idle';
	case MOB_PANDA_IDLE_AGGRESSIVE = 'mob.panda.idle.aggressive';
	case MOB_PANDA_IDLE_WORRIED = 'mob.panda.idle.worried';
	case MOB_PANDA_PRESNEEZE = 'mob.panda.presneeze';
	case MOB_PANDA_SNEEZE = 'mob.panda.sneeze';
	case MOB_PANDA_STEP = 'mob.panda.step';
	case MOB_PANDA_BABY_IDLE = 'mob.panda_baby.idle';
	case MOB_PARROT_DEATH = 'mob.parrot.death';
	case MOB_PARROT_EAT = 'mob.parrot.eat';
	case MOB_PARROT_FLY = 'mob.parrot.fly';
	case MOB_PARROT_HURT = 'mob.parrot.hurt';
	case MOB_PARROT_IDLE = 'mob.parrot.idle';
	case MOB_PARROT_STEP = 'mob.parrot.step';
	case MOB_PHANTOM_BITE = 'mob.phantom.bite';
	case MOB_PHANTOM_DEATH = 'mob.phantom.death';
	case MOB_PHANTOM_FLAP = 'mob.phantom.flap';
	case MOB_PHANTOM_HURT = 'mob.phantom.hurt';
	case MOB_PHANTOM_IDLE = 'mob.phantom.idle';
	case MOB_PHANTOM_SWOOP = 'mob.phantom.swoop';
	case MOB_PIG_BOOST = 'mob.pig.boost';
	case MOB_PIG_DEATH = 'mob.pig.death';
	case MOB_PIG_SAY = 'mob.pig.say';
	case MOB_PIG_STEP = 'mob.pig.step';
	case MOB_PIGLIN_ADMIRING_ITEM = 'mob.piglin.admiring_item';
	case MOB_PIGLIN_AMBIENT = 'mob.piglin.ambient';
	case MOB_PIGLIN_ANGRY = 'mob.piglin.angry';
	case MOB_PIGLIN_CELEBRATE = 'mob.piglin.celebrate';
	case MOB_PIGLIN_CONVERTED_TO_ZOMBIFIED = 'mob.piglin.converted_to_zombified';
	case MOB_PIGLIN_DEATH = 'mob.piglin.death';
	case MOB_PIGLIN_HURT = 'mob.piglin.hurt';
	case MOB_PIGLIN_JEALOUS = 'mob.piglin.jealous';
	case MOB_PIGLIN_RETREAT = 'mob.piglin.retreat';
	case MOB_PIGLIN_STEP = 'mob.piglin.step';
	case MOB_PIGLIN_BRUTE_AMBIENT = 'mob.piglin_brute.ambient';
	case MOB_PIGLIN_BRUTE_ANGRY = 'mob.piglin_brute.angry';
	case MOB_PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED = 'mob.piglin_brute.converted_to_zombified';
	case MOB_PIGLIN_BRUTE_DEATH = 'mob.piglin_brute.death';
	case MOB_PIGLIN_BRUTE_HURT = 'mob.piglin_brute.hurt';
	case MOB_PIGLIN_BRUTE_STEP = 'mob.piglin_brute.step';
	case MOB_PILLAGER_CELEBRATE = 'mob.pillager.celebrate';
	case MOB_PILLAGER_DEATH = 'mob.pillager.death';
	case MOB_PILLAGER_HURT = 'mob.pillager.hurt';
	case MOB_PILLAGER_IDLE = 'mob.pillager.idle';
	case MOB_PLAYER_HURT_DROWN = 'mob.player.hurt_drown';
	case MOB_PLAYER_HURT_FREEZE = 'mob.player.hurt_freeze';
	case MOB_PLAYER_HURT_ON_FIRE = 'mob.player.hurt_on_fire';
	case MOB_POLARBEAR_DEATH = 'mob.polarbear.death';
	case MOB_POLARBEAR_HURT = 'mob.polarbear.hurt';
	case MOB_POLARBEAR_IDLE = 'mob.polarbear.idle';
	case MOB_POLARBEAR_STEP = 'mob.polarbear.step';
	case MOB_POLARBEAR_WARNING = 'mob.polarbear.warning';
	case MOB_POLARBEAR_BABY_IDLE = 'mob.polarbear_baby.idle';
	case MOB_RABBIT_DEATH = 'mob.rabbit.death';
	case MOB_RABBIT_HOP = 'mob.rabbit.hop';
	case MOB_RABBIT_HURT = 'mob.rabbit.hurt';
	case MOB_RABBIT_IDLE = 'mob.rabbit.idle';
	case MOB_RAVAGER_AMBIENT = 'mob.ravager.ambient';
	case MOB_RAVAGER_BITE = 'mob.ravager.bite';
	case MOB_RAVAGER_CELEBRATE = 'mob.ravager.celebrate';
	case MOB_RAVAGER_DEATH = 'mob.ravager.death';
	case MOB_RAVAGER_HURT = 'mob.ravager.hurt';
	case MOB_RAVAGER_ROAR = 'mob.ravager.roar';
	case MOB_RAVAGER_STEP = 'mob.ravager.step';
	case MOB_RAVAGER_STUN = 'mob.ravager.stun';
	case MOB_SHEEP_SAY = 'mob.sheep.say';
	case MOB_SHEEP_SHEAR = 'mob.sheep.shear';
	case MOB_SHEEP_STEP = 'mob.sheep.step';
	case MOB_SHULKER_AMBIENT = 'mob.shulker.ambient';
	case MOB_SHULKER_BULLET_HIT = 'mob.shulker.bullet.hit';
	case MOB_SHULKER_CLOSE = 'mob.shulker.close';
	case MOB_SHULKER_CLOSE_HURT = 'mob.shulker.close.hurt';
	case MOB_SHULKER_DEATH = 'mob.shulker.death';
	case MOB_SHULKER_HURT = 'mob.shulker.hurt';
	case MOB_SHULKER_OPEN = 'mob.shulker.open';
	case MOB_SHULKER_SHOOT = 'mob.shulker.shoot';
	case MOB_SHULKER_TELEPORT = 'mob.shulker.teleport';
	case MOB_SILVERFISH_HIT = 'mob.silverfish.hit';
	case MOB_SILVERFISH_KILL = 'mob.silverfish.kill';
	case MOB_SILVERFISH_SAY = 'mob.silverfish.say';
	case MOB_SILVERFISH_STEP = 'mob.silverfish.step';
	case MOB_SKELETON_CONVERT_TO_STRAY = 'mob.skeleton.convert_to_stray';
	case MOB_SKELETON_DEATH = 'mob.skeleton.death';
	case MOB_SKELETON_HURT = 'mob.skeleton.hurt';
	case MOB_SKELETON_SAY = 'mob.skeleton.say';
	case MOB_SKELETON_STEP = 'mob.skeleton.step';
	case MOB_SLIME_ATTACK = 'mob.slime.attack';
	case MOB_SLIME_BIG = 'mob.slime.big';
	case MOB_SLIME_DEATH = 'mob.slime.death';
	case MOB_SLIME_HURT = 'mob.slime.hurt';
	case MOB_SLIME_JUMP = 'mob.slime.jump';
	case MOB_SLIME_SMALL = 'mob.slime.small';
	case MOB_SLIME_SQUISH = 'mob.slime.squish';
	case MOB_SNIFFER_DEATH = 'mob.sniffer.death';
	case MOB_SNIFFER_DIGGING = 'mob.sniffer.digging';
	case MOB_SNIFFER_DROP_SEED = 'mob.sniffer.drop_seed';
	case MOB_SNIFFER_EAT = 'mob.sniffer.eat';
	case MOB_SNIFFER_HAPPY = 'mob.sniffer.happy';
	case MOB_SNIFFER_HURT = 'mob.sniffer.hurt';
	case MOB_SNIFFER_IDLE = 'mob.sniffer.idle';
	case MOB_SNIFFER_LONG_SNIFF = 'mob.sniffer.long_sniff';
	case MOB_SNIFFER_PLOP = 'mob.sniffer.plop';
	case MOB_SNIFFER_SEARCHING = 'mob.sniffer.searching';
	case MOB_SNIFFER_SNIFFSNIFF = 'mob.sniffer.sniffsniff';
	case MOB_SNIFFER_STAND_UP = 'mob.sniffer.stand_up';
	case MOB_SNIFFER_STEP = 'mob.sniffer.step';
	case MOB_SNOWGOLEM_DEATH = 'mob.snowgolem.death';
	case MOB_SNOWGOLEM_HURT = 'mob.snowgolem.hurt';
	case MOB_SNOWGOLEM_SHOOT = 'mob.snowgolem.shoot';
	case MOB_SPIDER_DEATH = 'mob.spider.death';
	case MOB_SPIDER_SAY = 'mob.spider.say';
	case MOB_SPIDER_STEP = 'mob.spider.step';
	case MOB_SQUID_AMBIENT = 'mob.squid.ambient';
	case MOB_SQUID_DEATH = 'mob.squid.death';
	case MOB_SQUID_HURT = 'mob.squid.hurt';
	case MOB_SQUID_INK_SQUIRT = 'mob.squid.ink_squirt';
	case MOB_STRAY_AMBIENT = 'mob.stray.ambient';
	case MOB_STRAY_DEATH = 'mob.stray.death';
	case MOB_STRAY_HURT = 'mob.stray.hurt';
	case MOB_STRAY_STEP = 'mob.stray.step';
	case MOB_STRIDER_DEATH = 'mob.strider.death';
	case MOB_STRIDER_EAT = 'mob.strider.eat';
	case MOB_STRIDER_HURT = 'mob.strider.hurt';
	case MOB_STRIDER_IDLE = 'mob.strider.idle';
	case MOB_STRIDER_PANIC = 'mob.strider.panic';
	case MOB_STRIDER_STEP = 'mob.strider.step';
	case MOB_STRIDER_STEP_LAVA = 'mob.strider.step_lava';
	case MOB_STRIDER_TEMPT = 'mob.strider.tempt';
	case MOB_TADPOLE_CONVERT_TO_FROG = 'mob.tadpole.convert_to_frog';
	case MOB_TADPOLE_DEATH = 'mob.tadpole.death';
	case MOB_TADPOLE_HURT = 'mob.tadpole.hurt';
	case MOB_TURTLE_AMBIENT = 'mob.turtle.ambient';
	case MOB_TURTLE_DEATH = 'mob.turtle.death';
	case MOB_TURTLE_HURT = 'mob.turtle.hurt';
	case MOB_TURTLE_STEP = 'mob.turtle.step';
	case MOB_TURTLE_SWIM = 'mob.turtle.swim';
	case MOB_TURTLE_BABY_BORN = 'mob.turtle_baby.born';
	case MOB_TURTLE_BABY_DEATH = 'mob.turtle_baby.death';
	case MOB_TURTLE_BABY_HURT = 'mob.turtle_baby.hurt';
	case MOB_TURTLE_BABY_STEP = 'mob.turtle_baby.step';
	case MOB_VEX_AMBIENT = 'mob.vex.ambient';
	case MOB_VEX_CHARGE = 'mob.vex.charge';
	case MOB_VEX_DEATH = 'mob.vex.death';
	case MOB_VEX_HURT = 'mob.vex.hurt';
	case MOB_VILLAGER_DEATH = 'mob.villager.death';
	case MOB_VILLAGER_HAGGLE = 'mob.villager.haggle';
	case MOB_VILLAGER_HIT = 'mob.villager.hit';
	case MOB_VILLAGER_IDLE = 'mob.villager.idle';
	case MOB_VILLAGER_NO = 'mob.villager.no';
	case MOB_VILLAGER_YES = 'mob.villager.yes';
	case MOB_VINDICATOR_CELEBRATE = 'mob.vindicator.celebrate';
	case MOB_VINDICATOR_DEATH = 'mob.vindicator.death';
	case MOB_VINDICATOR_HURT = 'mob.vindicator.hurt';
	case MOB_VINDICATOR_IDLE = 'mob.vindicator.idle';
	case MOB_WANDERINGTRADER_DEATH = 'mob.wanderingtrader.death';
	case MOB_WANDERINGTRADER_DISAPPEARED = 'mob.wanderingtrader.disappeared';
	case MOB_WANDERINGTRADER_DRINK_MILK = 'mob.wanderingtrader.drink_milk';
	case MOB_WANDERINGTRADER_DRINK_POTION = 'mob.wanderingtrader.drink_potion';
	case MOB_WANDERINGTRADER_HAGGLE = 'mob.wanderingtrader.haggle';
	case MOB_WANDERINGTRADER_HURT = 'mob.wanderingtrader.hurt';
	case MOB_WANDERINGTRADER_IDLE = 'mob.wanderingtrader.idle';
	case MOB_WANDERINGTRADER_NO = 'mob.wanderingtrader.no';
	case MOB_WANDERINGTRADER_REAPPEARED = 'mob.wanderingtrader.reappeared';
	case MOB_WANDERINGTRADER_YES = 'mob.wanderingtrader.yes';
	case MOB_WARDEN_AGITATED = 'mob.warden.agitated';
	case MOB_WARDEN_ANGRY = 'mob.warden.angry';
	case MOB_WARDEN_ATTACK = 'mob.warden.attack';
	case MOB_WARDEN_CLICKING = 'mob.warden.clicking';
	case MOB_WARDEN_DEATH = 'mob.warden.death';
	case MOB_WARDEN_DIG = 'mob.warden.dig';
	case MOB_WARDEN_EMERGE = 'mob.warden.emerge';
	case MOB_WARDEN_HEARTBEAT = 'mob.warden.heartbeat';
	case MOB_WARDEN_HURT = 'mob.warden.hurt';
	case MOB_WARDEN_IDLE = 'mob.warden.idle';
	case MOB_WARDEN_LISTENING = 'mob.warden.listening';
	case MOB_WARDEN_LISTENING_ANGRY = 'mob.warden.listening_angry';
	case MOB_WARDEN_NEARBY_CLOSE = 'mob.warden.nearby_close';
	case MOB_WARDEN_NEARBY_CLOSER = 'mob.warden.nearby_closer';
	case MOB_WARDEN_NEARBY_CLOSEST = 'mob.warden.nearby_closest';
	case MOB_WARDEN_ROAR = 'mob.warden.roar';
	case MOB_WARDEN_SNIFF = 'mob.warden.sniff';
	case MOB_WARDEN_SONIC_BOOM = 'mob.warden.sonic_boom';
	case MOB_WARDEN_SONIC_CHARGE = 'mob.warden.sonic_charge';
	case MOB_WARDEN_STEP = 'mob.warden.step';
	case MOB_WITCH_AMBIENT = 'mob.witch.ambient';
	case MOB_WITCH_CELEBRATE = 'mob.witch.celebrate';
	case MOB_WITCH_DEATH = 'mob.witch.death';
	case MOB_WITCH_DRINK = 'mob.witch.drink';
	case MOB_WITCH_HURT = 'mob.witch.hurt';
	case MOB_WITCH_THROW = 'mob.witch.throw';
	case MOB_WITHER_AMBIENT = 'mob.wither.ambient';
	case MOB_WITHER_BREAK_BLOCK = 'mob.wither.break_block';
	case MOB_WITHER_DEATH = 'mob.wither.death';
	case MOB_WITHER_HURT = 'mob.wither.hurt';
	case MOB_WITHER_SHOOT = 'mob.wither.shoot';
	case MOB_WITHER_SPAWN = 'mob.wither.spawn';
	case MOB_WOLF_BARK = 'mob.wolf.bark';
	case MOB_WOLF_DEATH = 'mob.wolf.death';
	case MOB_WOLF_GROWL = 'mob.wolf.growl';
	case MOB_WOLF_HURT = 'mob.wolf.hurt';
	case MOB_WOLF_PANTING = 'mob.wolf.panting';
	case MOB_WOLF_SHAKE = 'mob.wolf.shake';
	case MOB_WOLF_STEP = 'mob.wolf.step';
	case MOB_WOLF_WHINE = 'mob.wolf.whine';
	case MOB_ZOGLIN_ANGRY = 'mob.zoglin.angry';
	case MOB_ZOGLIN_ATTACK = 'mob.zoglin.attack';
	case MOB_ZOGLIN_DEATH = 'mob.zoglin.death';
	case MOB_ZOGLIN_HURT = 'mob.zoglin.hurt';
	case MOB_ZOGLIN_IDLE = 'mob.zoglin.idle';
	case MOB_ZOGLIN_STEP = 'mob.zoglin.step';
	case MOB_ZOMBIE_DEATH = 'mob.zombie.death';
	case MOB_ZOMBIE_HURT = 'mob.zombie.hurt';
	case MOB_ZOMBIE_REMEDY = 'mob.zombie.remedy';
	case MOB_ZOMBIE_SAY = 'mob.zombie.say';
	case MOB_ZOMBIE_STEP = 'mob.zombie.step';
	case MOB_ZOMBIE_UNFECT = 'mob.zombie.unfect';
	case MOB_ZOMBIE_WOOD = 'mob.zombie.wood';
	case MOB_ZOMBIE_WOODBREAK = 'mob.zombie.woodbreak';
	case MOB_ZOMBIE_VILLAGER_DEATH = 'mob.zombie_villager.death';
	case MOB_ZOMBIE_VILLAGER_HURT = 'mob.zombie_villager.hurt';
	case MOB_ZOMBIE_VILLAGER_SAY = 'mob.zombie_villager.say';
	case MOB_ZOMBIEPIG_ZPIG = 'mob.zombiepig.zpig';
	case MOB_ZOMBIEPIG_ZPIGANGRY = 'mob.zombiepig.zpigangry';
	case MOB_ZOMBIEPIG_ZPIGDEATH = 'mob.zombiepig.zpigdeath';
	case MOB_ZOMBIEPIG_ZPIGHURT = 'mob.zombiepig.zpighurt';
	case MUSIC_GAME = 'music.game';
	case MUSIC_GAME_BASALT_DELTAS = 'music.game.basalt_deltas';
	case MUSIC_GAME_CREATIVE = 'music.game.creative';
	case MUSIC_GAME_CREDITS = 'music.game.credits';
	case MUSIC_GAME_CRIMSON_FOREST = 'music.game.crimson_forest';
	case MUSIC_GAME_DEEP_DARK = 'music.game.deep_dark';
	case MUSIC_GAME_DRIPSTONE_CAVES = 'music.game.dripstone_caves';
	case MUSIC_GAME_END = 'music.game.end';
	case MUSIC_GAME_ENDBOSS = 'music.game.endboss';
	case MUSIC_GAME_FROZEN_PEAKS = 'music.game.frozen_peaks';
	case MUSIC_GAME_GROVE = 'music.game.grove';
	case MUSIC_GAME_JAGGED_PEAKS = 'music.game.jagged_peaks';
	case MUSIC_GAME_LUSH_CAVES = 'music.game.lush_caves';
	case MUSIC_GAME_MEADOW = 'music.game.meadow';
	case MUSIC_GAME_NETHER = 'music.game.nether';
	case MUSIC_GAME_NETHER_WASTES = 'music.game.nether_wastes';
	case MUSIC_GAME_SNOWY_SLOPES = 'music.game.snowy_slopes';
	case MUSIC_GAME_SOUL_SAND_VALLEY = 'music.game.soul_sand_valley';
	case MUSIC_GAME_SOULSAND_VALLEY = 'music.game.soulsand_valley';
	case MUSIC_GAME_STONY_PEAKS = 'music.game.stony_peaks';
	case MUSIC_GAME_SWAMP_MUSIC = 'music.game.swamp_music';
	case MUSIC_GAME_WARPED_FOREST = 'music.game.warped_forest';
	case MUSIC_GAME_WATER = 'music.game.water';
	case MUSIC_GAME_AND_WILD_EQUAL_CHANCE = 'music.game_and_wild_equal_chance';
	case MUSIC_GAME_AND_WILD_FAVOR_GAME = 'music.game_and_wild_favor_game';
	case MUSIC_MENU = 'music.menu';
	case MUSIC_OVERWORLD_BAMBOO_JUNGLE = 'music.overworld.bamboo_jungle';
	case MUSIC_OVERWORLD_CHERRY_GROVE = 'music.overworld.cherry_grove';
	case MUSIC_OVERWORLD_DEEP_DARK = 'music.overworld.deep_dark';
	case MUSIC_OVERWORLD_DESERT = 'music.overworld.desert';
	case MUSIC_OVERWORLD_DRIPSTONE_CAVES = 'music.overworld.dripstone_caves';
	case MUSIC_OVERWORLD_FLOWER_FOREST = 'music.overworld.flower_forest';
	case MUSIC_OVERWORLD_GROVE = 'music.overworld.grove';
	case MUSIC_OVERWORLD_JAGGED_PEAKS = 'music.overworld.jagged_peaks';
	case MUSIC_OVERWORLD_JUNGLE = 'music.overworld.jungle';
	case MUSIC_OVERWORLD_JUNGLE_EDGE = 'music.overworld.jungle_edge';
	case MUSIC_OVERWORLD_LUSH_CAVES = 'music.overworld.lush_caves';
	case MUSIC_OVERWORLD_MESA = 'music.overworld.mesa';
	case MUSIC_OVERWORLD_SNOWY_SLOPES = 'music.overworld.snowy_slopes';
	case MUSIC_OVERWORLD_STONY_PEAKS = 'music.overworld.stony_peaks';
	case NOTE_BANJO = 'note.banjo';
	case NOTE_BASS = 'note.bass';
	case NOTE_BASSATTACK = 'note.bassattack';
	case NOTE_BD = 'note.bd';
	case NOTE_BELL = 'note.bell';
	case NOTE_BIT = 'note.bit';
	case NOTE_CHIME = 'note.chime';
	case NOTE_COW_BELL = 'note.cow_bell';
	case NOTE_CREEPER = 'note.creeper';
	case NOTE_DIDGERIDOO = 'note.didgeridoo';
	case NOTE_ENDERDRAGON = 'note.enderdragon';
	case NOTE_FLUTE = 'note.flute';
	case NOTE_GUITAR = 'note.guitar';
	case NOTE_HARP = 'note.harp';
	case NOTE_HAT = 'note.hat';
	case NOTE_IRON_XYLOPHONE = 'note.iron_xylophone';
	case NOTE_PIGLIN = 'note.piglin';
	case NOTE_PLING = 'note.pling';
	case NOTE_SKELETON = 'note.skeleton';
	case NOTE_SNARE = 'note.snare';
	case NOTE_WITHERSKELETON = 'note.witherskeleton';
	case NOTE_XYLOPHONE = 'note.xylophone';
	case NOTE_ZOMBIE = 'note.zombie';
	case OMINOUS_BOTTLE_END_USE = 'ominous_bottle.end_use';
	case OMINOUS_ITEM_SPAWNER_ABOUT_TO_SPAWN_ITEM = 'ominous_item_spawner.about_to_spawn_item';
	case OMINOUS_ITEM_SPAWNER_SPAWN_ITEM = 'ominous_item_spawner.spawn_item';
	case OMINOUS_ITEM_SPAWNER_SPAWN_ITEM_BEGIN = 'ominous_item_spawner.spawn_item_begin';
	case OPEN_BAMBOO_WOOD_DOOR = 'open.bamboo_wood_door';
	case OPEN_BAMBOO_WOOD_FENCE_GATE = 'open.bamboo_wood_fence_gate';
	case OPEN_BAMBOO_WOOD_TRAPDOOR = 'open.bamboo_wood_trapdoor';
	case OPEN_CHERRY_WOOD_DOOR = 'open.cherry_wood_door';
	case OPEN_CHERRY_WOOD_FENCE_GATE = 'open.cherry_wood_fence_gate';
	case OPEN_CHERRY_WOOD_TRAPDOOR = 'open.cherry_wood_trapdoor';
	case OPEN_FENCE_GATE = 'open.fence_gate';
	case OPEN_IRON_DOOR = 'open.iron_door';
	case OPEN_IRON_TRAPDOOR = 'open.iron_trapdoor';
	case OPEN_NETHER_WOOD_DOOR = 'open.nether_wood_door';
	case OPEN_NETHER_WOOD_FENCE_GATE = 'open.nether_wood_fence_gate';
	case OPEN_NETHER_WOOD_TRAPDOOR = 'open.nether_wood_trapdoor';
	case OPEN_WOODEN_DOOR = 'open.wooden_door';
	case OPEN_WOODEN_TRAPDOOR = 'open.wooden_trapdoor';
	case OPEN_DOOR_COPPER = 'open_door.copper';
	case OPEN_TRAPDOOR_COPPER = 'open_trapdoor.copper';
	case PARTICLE_SOUL_ESCAPE = 'particle.soul_escape';
	case PICK_BERRIES_CAVE_VINES = 'pick_berries.cave_vines';
	case PICKUP_CHISELED_BOOKSHELF = 'pickup.chiseled_bookshelf';
	case PICKUP_ENCHANTED_CHISELED_BOOKSHELF = 'pickup_enchanted.chiseled_bookshelf';
	case PLACE_AMETHYST_BLOCK = 'place.amethyst_block';
	case PLACE_AMETHYST_CLUSTER = 'place.amethyst_cluster';
	case PLACE_AZALEA = 'place.azalea';
	case PLACE_AZALEA_LEAVES = 'place.azalea_leaves';
	case PLACE_BAMBOO_WOOD = 'place.bamboo_wood';
	case PLACE_BIG_DRIPLEAF = 'place.big_dripleaf';
	case PLACE_CALCITE = 'place.calcite';
	case PLACE_CHERRY_LEAVES = 'place.cherry_leaves';
	case PLACE_CHERRY_WOOD = 'place.cherry_wood';
	case PLACE_CHISELED_BOOKSHELF = 'place.chiseled_bookshelf';
	case PLACE_COPPER = 'place.copper';
	case PLACE_COPPER_BULB = 'place.copper_bulb';
	case PLACE_DEEPSLATE = 'place.deepslate';
	case PLACE_DEEPSLATE_BRICKS = 'place.deepslate_bricks';
	case PLACE_DIRT_WITH_ROOTS = 'place.dirt_with_roots';
	case PLACE_DRIPSTONE_BLOCK = 'place.dripstone_block';
	case PLACE_HANGING_ROOTS = 'place.hanging_roots';
	case PLACE_LARGE_AMETHYST_BUD = 'place.large_amethyst_bud';
	case PLACE_MEDIUM_AMETHYST_BUD = 'place.medium_amethyst_bud';
	case PLACE_MOSS = 'place.moss';
	case PLACE_NETHER_WOOD = 'place.nether_wood';
	case PLACE_PINK_PETALS = 'place.pink_petals';
	case PLACE_POINTED_DRIPSTONE = 'place.pointed_dripstone';
	case PLACE_POWDER_SNOW = 'place.powder_snow';
	case PLACE_SCULK = 'place.sculk';
	case PLACE_SCULK_CATALYST = 'place.sculk_catalyst';
	case PLACE_SCULK_SENSOR = 'place.sculk_sensor';
	case PLACE_SCULK_SHRIEKER = 'place.sculk_shrieker';
	case PLACE_SMALL_AMETHYST_BUD = 'place.small_amethyst_bud';
	case PLACE_SPORE_BLOSSOM = 'place.spore_blossom';
	case PLACE_SUSPICIOUS_GRAVEL = 'place.suspicious_gravel';
	case PLACE_SUSPICIOUS_SAND = 'place.suspicious_sand';
	case PLACE_TUFF = 'place.tuff';
	case PLACE_TUFF_BRICKS = 'place.tuff_bricks';
	case PORTAL_PORTAL = 'portal.portal';
	case PORTAL_TRAVEL = 'portal.travel';
	case PORTAL_TRIGGER = 'portal.trigger';
	case POWER_OFF_SCULK_SENSOR = 'power.off.sculk_sensor';
	case POWER_ON_SCULK_SENSOR = 'power.on.sculk_sensor';
	case PUMPKIN_CARVE = 'pumpkin.carve';
	case RAID_HORN = 'raid.horn';
	case RANDOM_ANVIL_BREAK = 'random.anvil_break';
	case RANDOM_ANVIL_LAND = 'random.anvil_land';
	case RANDOM_ANVIL_USE = 'random.anvil_use';
	case RANDOM_BOW = 'random.bow';
	case RANDOM_BOWHIT = 'random.bowhit';
	case RANDOM_BREAK = 'random.break';
	case RANDOM_BURP = 'random.burp';
	case RANDOM_CHESTCLOSED = 'random.chestclosed';
	case RANDOM_CHESTOPEN = 'random.chestopen';
	case RANDOM_CLICK = 'random.click';
	case RANDOM_DOOR_CLOSE = 'random.door_close';
	case RANDOM_DOOR_OPEN = 'random.door_open';
	case RANDOM_DRINK = 'random.drink';
	case RANDOM_DRINK_HONEY = 'random.drink_honey';
	case RANDOM_EAT = 'random.eat';
	case RANDOM_ENDERCHESTCLOSED = 'random.enderchestclosed';
	case RANDOM_ENDERCHESTOPEN = 'random.enderchestopen';
	case RANDOM_EXPLODE = 'random.explode';
	case RANDOM_FIZZ = 'random.fizz';
	case RANDOM_FUSE = 'random.fuse';
	case RANDOM_GLASS = 'random.glass';
	case RANDOM_HURT = 'random.hurt';
	case RANDOM_LEVELUP = 'random.levelup';
	case RANDOM_LEVER_CLICK = 'random.lever_click';
	case RANDOM_ORB = 'random.orb';
	case RANDOM_POP = 'random.pop';
	case RANDOM_POP2 = 'random.pop2';
	case RANDOM_POTION_BREWED = 'random.potion.brewed';
	case RANDOM_SCREENSHOT = 'random.screenshot';
	case RANDOM_SHULKERBOXCLOSED = 'random.shulkerboxclosed';
	case RANDOM_SHULKERBOXOPEN = 'random.shulkerboxopen';
	case RANDOM_SPLASH = 'random.splash';
	case RANDOM_STONE_CLICK = 'random.stone_click';
	case RANDOM_SWIM = 'random.swim';
	case RANDOM_TOAST = 'random.toast';
	case RANDOM_TOAST_RECIPE_UNLOCKING_IN = 'random.toast_recipe_unlocking_in';
	case RANDOM_TOAST_RECIPE_UNLOCKING_OUT = 'random.toast_recipe_unlocking_out';
	case RANDOM_TOTEM = 'random.totem';
	case RANDOM_WOOD_CLICK = 'random.wood_click';
	case RECORD_11 = 'record.11';
	case RECORD_13 = 'record.13';
	case RECORD_5 = 'record.5';
	case RECORD_BLOCKS = 'record.blocks';
	case RECORD_CAT = 'record.cat';
	case RECORD_CHIRP = 'record.chirp';
	case RECORD_CREATOR = 'record.creator';
	case RECORD_CREATOR_MUSIC_BOX = 'record.creator_music_box';
	case RECORD_FAR = 'record.far';
	case RECORD_MALL = 'record.mall';
	case RECORD_MELLOHI = 'record.mellohi';
	case RECORD_OTHERSIDE = 'record.otherside';
	case RECORD_PIGSTEP = 'record.pigstep';
	case RECORD_PRECIPICE = 'record.precipice';
	case RECORD_RELIC = 'record.relic';
	case RECORD_STAL = 'record.stal';
	case RECORD_STRAD = 'record.strad';
	case RECORD_WAIT = 'record.wait';
	case RECORD_WARD = 'record.ward';
	case RESONATE_AMETHYST_BLOCK = 'resonate.amethyst_block';
	case RESPAWN_ANCHOR_AMBIENT = 'respawn_anchor.ambient';
	case RESPAWN_ANCHOR_CHARGE = 'respawn_anchor.charge';
	case RESPAWN_ANCHOR_DEPLETE = 'respawn_anchor.deplete';
	case RESPAWN_ANCHOR_SET_SPAWN = 'respawn_anchor.set_spawn';
	case SCRAPE = 'scrape';
	case SHATTER_DECORATED_POT = 'shatter.decorated_pot';
	case SHRIEK_SCULK_SHRIEKER = 'shriek.sculk_shrieker';
	case SIGN_DYE_USE = 'sign.dye.use';
	case SIGN_INK_SAC_USE = 'sign.ink_sac.use';
	case SMITHING_TABLE_USE = 'smithing_table.use';
	case SPREAD_SCULK = 'spread.sculk';
	case STEP_AMETHYST_BLOCK = 'step.amethyst_block';
	case STEP_AMETHYST_CLUSTER = 'step.amethyst_cluster';
	case STEP_ANCIENT_DEBRIS = 'step.ancient_debris';
	case STEP_AZALEA = 'step.azalea';
	case STEP_AZALEA_LEAVES = 'step.azalea_leaves';
	case STEP_BAMBOO_WOOD = 'step.bamboo_wood';
	case STEP_BAMBOO_WOOD_HANGING_SIGN = 'step.bamboo_wood_hanging_sign';
	case STEP_BASALT = 'step.basalt';
	case STEP_BIG_DRIPLEAF = 'step.big_dripleaf';
	case STEP_BONE_BLOCK = 'step.bone_block';
	case STEP_CALCITE = 'step.calcite';
	case STEP_CANDLE = 'step.candle';
	case STEP_CAVE_VINES = 'step.cave_vines';
	case STEP_CHAIN = 'step.chain';
	case STEP_CHERRY_LEAVES = 'step.cherry_leaves';
	case STEP_CHERRY_WOOD = 'step.cherry_wood';
	case STEP_CHERRY_WOOD_HANGING_SIGN = 'step.cherry_wood_hanging_sign';
	case STEP_CHISELED_BOOKSHELF = 'step.chiseled_bookshelf';
	case STEP_CLOTH = 'step.cloth';
	case STEP_COPPER = 'step.copper';
	case STEP_COPPER_BULB = 'step.copper_bulb';
	case STEP_COPPER_GRATE = 'step.copper_grate';
	case STEP_CORAL = 'step.coral';
	case STEP_DECORATED_POT = 'step.decorated_pot';
	case STEP_DEEPSLATE = 'step.deepslate';
	case STEP_DEEPSLATE_BRICKS = 'step.deepslate_bricks';
	case STEP_DIRT_WITH_ROOTS = 'step.dirt_with_roots';
	case STEP_DRIPSTONE_BLOCK = 'step.dripstone_block';
	case STEP_FROG_SPAWN = 'step.frog_spawn';
	case STEP_FROGLIGHT = 'step.froglight';
	case STEP_GRASS = 'step.grass';
	case STEP_GRAVEL = 'step.gravel';
	case STEP_HANGING_ROOTS = 'step.hanging_roots';
	case STEP_HANGING_SIGN = 'step.hanging_sign';
	case STEP_HEAVY_CORE = 'step.heavy_core';
	case STEP_HONEY_BLOCK = 'step.honey_block';
	case STEP_LADDER = 'step.ladder';
	case STEP_MOSS = 'step.moss';
	case STEP_NETHER_BRICK = 'step.nether_brick';
	case STEP_NETHER_GOLD_ORE = 'step.nether_gold_ore';
	case STEP_NETHER_SPROUTS = 'step.nether_sprouts';
	case STEP_NETHER_WART = 'step.nether_wart';
	case STEP_NETHER_WOOD = 'step.nether_wood';
	case STEP_NETHER_WOOD_HANGING_SIGN = 'step.nether_wood_hanging_sign';
	case STEP_NETHERITE = 'step.netherite';
	case STEP_NETHERRACK = 'step.netherrack';
	case STEP_NYLIUM = 'step.nylium';
	case STEP_PINK_PETALS = 'step.pink_petals';
	case STEP_POINTED_DRIPSTONE = 'step.pointed_dripstone';
	case STEP_POWDER_SNOW = 'step.powder_snow';
	case STEP_ROOTS = 'step.roots';
	case STEP_SAND = 'step.sand';
	case STEP_SCULK = 'step.sculk';
	case STEP_SCULK_CATALYST = 'step.sculk_catalyst';
	case STEP_SCULK_SENSOR = 'step.sculk_sensor';
	case STEP_SCULK_SHRIEKER = 'step.sculk_shrieker';
	case STEP_SCULK_VEIN = 'step.sculk_vein';
	case STEP_SHROOMLIGHT = 'step.shroomlight';
	case STEP_SLIME = 'step.slime';
	case STEP_SNOW = 'step.snow';
	case STEP_SOUL_SAND = 'step.soul_sand';
	case STEP_SOUL_SOIL = 'step.soul_soil';
	case STEP_SPORE_BLOSSOM = 'step.spore_blossom';
	case STEP_STEM = 'step.stem';
	case STEP_STONE = 'step.stone';
	case STEP_SUSPICIOUS_GRAVEL = 'step.suspicious_gravel';
	case STEP_SUSPICIOUS_SAND = 'step.suspicious_sand';
	case STEP_TUFF = 'step.tuff';
	case STEP_TUFF_BRICKS = 'step.tuff_bricks';
	case STEP_VINES = 'step.vines';
	case STEP_WEB = 'step.web';
	case STEP_WOOD = 'step.wood';
	case TILE_PISTON_IN = 'tile.piston.in';
	case TILE_PISTON_OUT = 'tile.piston.out';
	case TILT_DOWN_BIG_DRIPLEAF = 'tilt_down.big_dripleaf';
	case TILT_UP_BIG_DRIPLEAF = 'tilt_up.big_dripleaf';
	case TRIAL_SPAWNER_AMBIENT = 'trial_spawner.ambient';
	case TRIAL_SPAWNER_AMBIENT_OMINOUS = 'trial_spawner.ambient_ominous';
	case TRIAL_SPAWNER_BREAK = 'trial_spawner.break';
	case TRIAL_SPAWNER_CHARGE_ACTIVATE = 'trial_spawner.charge_activate';
	case TRIAL_SPAWNER_CLOSE_SHUTTER = 'trial_spawner.close_shutter';
	case TRIAL_SPAWNER_DETECT_PLAYER = 'trial_spawner.detect_player';
	case TRIAL_SPAWNER_EJECT_ITEM = 'trial_spawner.eject_item';
	case TRIAL_SPAWNER_HIT = 'trial_spawner.hit';
	case TRIAL_SPAWNER_OPEN_SHUTTER = 'trial_spawner.open_shutter';
	case TRIAL_SPAWNER_PLACE = 'trial_spawner.place';
	case TRIAL_SPAWNER_SPAWN_MOB = 'trial_spawner.spawn_mob';
	case TRIAL_SPAWNER_STEP = 'trial_spawner.step';
	case UI_CARTOGRAPHY_TABLE_TAKE_RESULT = 'ui.cartography_table.take_result';
	case UI_DRAWER_CLOSE = 'ui.drawer_close';
	case UI_DRAWER_OPEN = 'ui.drawer_open';
	case UI_LOOM_SELECT_PATTERN = 'ui.loom.select_pattern';
	case UI_LOOM_TAKE_RESULT = 'ui.loom.take_result';
	case UI_STONECUTTER_TAKE_RESULT = 'ui.stonecutter.take_result';
	case USE_ANCIENT_DEBRIS = 'use.ancient_debris';
	case USE_BASALT = 'use.basalt';
	case USE_BONE_BLOCK = 'use.bone_block';
	case USE_CANDLE = 'use.candle';
	case USE_CAVE_VINES = 'use.cave_vines';
	case USE_CHAIN = 'use.chain';
	case USE_CLOTH = 'use.cloth';
	case USE_COPPER = 'use.copper';
	case USE_CORAL = 'use.coral';
	case USE_DEEPSLATE = 'use.deepslate';
	case USE_DEEPSLATE_BRICKS = 'use.deepslate_bricks';
	case USE_DIRT_WITH_ROOTS = 'use.dirt_with_roots';
	case USE_DRIPSTONE_BLOCK = 'use.dripstone_block';
	case USE_GRASS = 'use.grass';
	case USE_GRAVEL = 'use.gravel';
	case USE_HANGING_ROOTS = 'use.hanging_roots';
	case USE_HONEY_BLOCK = 'use.honey_block';
	case USE_LADDER = 'use.ladder';
	case USE_MOSS = 'use.moss';
	case USE_NETHER_BRICK = 'use.nether_brick';
	case USE_NETHER_GOLD_ORE = 'use.nether_gold_ore';
	case USE_NETHER_SPROUTS = 'use.nether_sprouts';
	case USE_NETHER_WART = 'use.nether_wart';
	case USE_NETHERITE = 'use.netherite';
	case USE_NETHERRACK = 'use.netherrack';
	case USE_NYLIUM = 'use.nylium';
	case USE_POINTED_DRIPSTONE = 'use.pointed_dripstone';
	case USE_ROOTS = 'use.roots';
	case USE_SAND = 'use.sand';
	case USE_SCULK_SENSOR = 'use.sculk_sensor';
	case USE_SHROOMLIGHT = 'use.shroomlight';
	case USE_SLIME = 'use.slime';
	case USE_SNOW = 'use.snow';
	case USE_SOUL_SAND = 'use.soul_sand';
	case USE_SOUL_SOIL = 'use.soul_soil';
	case USE_SPORE_BLOSSOM = 'use.spore_blossom';
	case USE_STEM = 'use.stem';
	case USE_STONE = 'use.stone';
	case USE_VINES = 'use.vines';
	case USE_WOOD = 'use.wood';
	case VAULT_ACTIVATE = 'vault.activate';
	case VAULT_AMBIENT = 'vault.ambient';
	case VAULT_BREAK = 'vault.break';
	case VAULT_CLOSE_SHUTTER = 'vault.close_shutter';
	case VAULT_DEACTIVATE = 'vault.deactivate';
	case VAULT_EJECT_ITEM = 'vault.eject_item';
	case VAULT_HIT = 'vault.hit';
	case VAULT_INSERT_ITEM = 'vault.insert_item';
	case VAULT_INSERT_ITEM_FAIL = 'vault.insert_item_fail';
	case VAULT_OPEN_SHUTTER = 'vault.open_shutter';
	case VAULT_PLACE = 'vault.place';
	case VAULT_STEP = 'vault.step';
	case VR_STUTTERTURN = 'vr.stutterturn';
	case WIND_CHARGE_BURST = 'wind_charge.burst';

	public static function fromValue(string $value) : self {
		foreach (self::cases() as $case) {
			if ($case->value === $value) {
				return $case;
			}
		}

		throw new InvalidSoundTypeException($value);
	}
}